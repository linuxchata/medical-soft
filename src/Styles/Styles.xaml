<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <!-- Fill Brushes -->
    <SolidColorBrush x:Key="AltDataGridRowBackgroundBrush" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="DataGridRowBackgroundBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#DDDDDD" />
    <SolidColorBrush x:Key="ButtonBackgroundBlueBrush" Color="#FFEEF5FD" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEEEEE" />
    <SolidColorBrush x:Key="DisabledButtonBrush" Color="#F4F4F4" />
    <SolidColorBrush x:Key="NormalBackgroundBrush" Color="#F0F0F0" />
    <SolidColorBrush x:Key="NormalDataGridColumnHeaderBackgroundBrush" Color="#DFE9F5" />
    <SolidColorBrush x:Key="NormalDataGridAlternatingRowBackground" Color="#EDF3F9" />
    <SolidColorBrush x:Key="NormalTabControlBackgroundBrush" Color="#DFE9F5" />
    <SolidColorBrush x:Key="NormalScrollBarThumbBackgroundBrush" Color="#CCCCCC" />
    <SolidColorBrush x:Key="NormalScrollBarLineButtonBackgroundBrush" Color="#F1F1F1" />
    <SolidColorBrush x:Key="MouseOverCheckBoxBackgroundBrush" Color="#B8E0F3" />
    <SolidColorBrush x:Key="MouseOverComboBoxItemBackgroundBrush" Color="#B8E0F3" />
    <SolidColorBrush x:Key="MouseOverDataGridCellBackgroundBrush" Color="#93CDFF" />
    <SolidColorBrush x:Key="MouseOverDataGridColumnHeaderBackgroundBrush" Color="#93CDFF" />
    <SolidColorBrush x:Key="MouseOverDataGridRowBackgroundBrush" Color="#E8E8E8" />
    <SolidColorBrush x:Key="PressedBackgroundBrush" Color="#BEE6FD" />
    <SolidColorBrush x:Key="PressedButtonBackgroundBrush" Color="#C5E6F7" />
    <SolidColorBrush x:Key="PressedScrollBarLineButtonBackgroundBrush" Color="#606060" />
    <SolidColorBrush x:Key="SelectedDataGridCellBackgroundBrush" Color="#3399FF" />
    <SolidColorBrush x:Key="SelectedDataGridRowBackgroundBrush" Color="#BEE6FD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#BEE6FD" />
    <SolidColorBrush x:Key="SelectedComboBoxItemBackgroundBrush" Color="#F6F6F6" />
    <SolidColorBrush x:Key="SelectedScrollBarThumbBackgroundBrush" Color="#A6A6A6" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="SelectedPathBackgroundBrush" Color="SkyBlue" />

    <!-- Border Brushes -->
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#707070" />
    <SolidColorBrush x:Key="ButtonBorderBlueBrush" Color="#C1CFDD" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888888" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAAAAA" />
    <SolidColorBrush x:Key="DisabledButtonBorderBrush" Color="#ADB2B5" />
    <SolidColorBrush x:Key="DisabledButtonForegroundBrush" Color="#988583" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444444" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#ACACAC" />
    <SolidColorBrush x:Key="NormalDataGridColumnHeaderForegroundBrush" Color="#000000" />
    <SolidColorBrush x:Key="NormalDataGridColumnHeaderBorderBrush" Color="#707070" />
    <SolidColorBrush x:Key="NormalDataGridLinesBrush" Color="LightGray" />
    <SolidColorBrush x:Key="NormalDataGridBorderBrush" Color="#B9C9DA" />
    <SolidColorBrush x:Key="NormalTabControlBorderBrush" Color="#B9C9DA" />
    <SolidColorBrush x:Key="NormalTextboxBorderBrush" Color="#FFABADB3" />
    <SolidColorBrush x:Key="NormalScrollBarBorderBrush" Color="#CCCCCC" />
    <SolidColorBrush x:Key="NormalScrollBarLineButtonBorderBrush" Color="#F1F1F1" />
    <SolidColorBrush x:Key="MouseOverComboBoxItemBorderBrush" Color="#26A0DA" />
    <SolidColorBrush x:Key="MouseOverDataGridColumnHeaderBorderBrush" Color="#93CDFF" />
    <SolidColorBrush x:Key="PressedButtonBorderBrush" Color="#2D638C" />
    <SolidColorBrush x:Key="PressedScrollBarLineButtonBorderBrush" Color="#606060" />
    <SolidColorBrush x:Key="SelectedBorderBrush" Color="#3C7FB1" />
    <SolidColorBrush x:Key="SelectedComboBoxItemBorderBrush" Color="#DADADA" />
    <SolidColorBrush x:Key="SelectedTabItemBorderBrush" Color="#FFB700" />
    <SolidColorBrush x:Key="SelectedScrollBarThumbBorderBrush" Color="#A6A6A6" />
    <SolidColorBrush x:Key="OrangeBorderBrush" Color="#FFB700" />

    <Color x:Key="BorderMediumColor">#FF888888</Color>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <ControlTemplate x:Key="ErrorTemplate">
        <DockPanel>
            <AdornedElementPlaceholder x:Name="customAdorner">
                <Border BorderBrush="#FFFF0000" BorderThickness="1.3" />
            </AdornedElementPlaceholder>
        </DockPanel>
    </ControlTemplate>

    <Style x:Key="TextBlockDefault" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="0 2 0 0" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="TextBoxDefault" TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalTextboxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="UndoLimit" Value="10" />
        <Setter Property="Height" Value="22"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{StaticResource NormalTextboxBorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalTextboxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="22" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{StaticResource NormalTextboxBorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="13"
                                    Height="13"
                                    CornerRadius="0"
                                    Background="{StaticResource NormalBackgroundBrush}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource NormalBorderBrush}">
                                <Path Width="7"
                                      Height="7"
                                      x:Name="CheckMark"
                                      SnapsToDevicePixels="False"
                                      Stroke="{StaticResource GlyphBrush}"
                                      StrokeThickness="2"
                                      Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverCheckBoxBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDefault" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{StaticResource ButtonBackgroundBrush}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource ButtonBorderBrush}" >
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedButtonBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledButtonBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledButtonBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledButtonForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonToolbar" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Width" Value="26" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{StaticResource ButtonBackgroundBlueBrush}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource ButtonBorderBlueBrush}" >
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedButtonBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledButtonBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledButtonBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledButtonForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource GlyphBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    Background="{StaticResource NormalBackgroundBrush}"
                    BorderBrush="{StaticResource NormalBorderBrush}"
                    BorderThickness="1" />
            <Border x:Name="MainAria"
                    Grid.Column="0"
                    CornerRadius="0"
                    Margin="1"
                    Background="{StaticResource NormalBackgroundBrush}"
                    BorderBrush="{StaticResource NormalBorderBrush}"
                    BorderThickness="0,0,0,0" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{StaticResource GlyphBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedBorderBrush}" />
                <Setter TargetName="MainAria" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackgroundBrush}" />
                <Setter TargetName="MainAria" Property="Background" Value="{StaticResource PressedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                            BorderThickness="1" >
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverComboBoxItemBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MouseOverComboBoxItemBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedComboBoxItemBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedComboBoxItemBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="Transparent"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource WindowBackgroundBrush}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource SolidBorderBrush}"/>
                                <ScrollViewer Margin="2,3,2,3"
                                              SnapsToDevicePixels="True">
                                    <VirtualizingStackPanel IsItemsHost="True"
                                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonText" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="White" BorderThickness="1">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedButtonBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderButtonStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Clip" Value="F1 M 0,0L 76,0L 76,76L 0,76L 0,0" />
    </Style>

    <Style x:Key="BorderHoverBlueButtonStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource BorderButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3665B3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderHoverRedButtonStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource BorderButtonStyle}">
        <Setter Property="Background" Value="#C75050" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E04343" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NavigationListBox" TargetType="ListBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="SkyBlue" Offset="0.0" />
                                <GradientStop Color="CadetBlue" Offset="1.0" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <ScrollViewer Margin="0"
                                      Focusable="False">
                            <WrapPanel Margin="0"
                                       IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectableListBoxItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Padding="5"
                            SnapsToDevicePixels="True">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectedPathBackgroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectedPathBackgroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectedPathBackgroundBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="NonSelectableListBoxItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Padding="5"
                            SnapsToDevicePixels="True">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectedPathBackgroundBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="PathButton" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <Style x:Key="PathButtonBlackStyleSmall" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButton}">
        <Setter Property="Fill" Value="Black" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="8" />
    </Style>

    <Style x:Key="PathButtonBlackStrokedStyleSmall" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButton}">
        <Setter Property="Fill" Value="Black" />
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="8" />
    </Style>

    <Style x:Key="PathButtonGrayStrokedStyleSmall" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButton}">
        <Setter Property="Fill" Value="{StaticResource GlyphBrush}" />
        <Setter Property="Stroke" Value="{StaticResource GlyphBrush}" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="8" />
    </Style>

    <Style x:Key="PathButtonWhiteStrokedStyleSmall" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButton}">
        <Setter Property="Fill" Value="White" />
        <Setter Property="Stroke" Value="White" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="8" />
    </Style>

    <Style x:Key="PathButtonWhiteStyleLarge" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButton}">
        <Setter Property="Fill" Value="White" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
    </Style>

    <Style x:Key="PathButtonBlackStyleLarge" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButton}">
        <Setter Property="Fill" Value="CadetBlue" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="ButtonBlackStrokedSmall" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource BorderButtonStyle}">
                        <Path x:Name="CrossMark"
                              Style="{StaticResource PathButtonBlackStrokedStyleSmall}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="LightSlateGray" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="LightSlateGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="Black" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonGrayStrokedSmall" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBlackStrokedSmall}">
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource BorderButtonStyle}">
                        <Path x:Name="CrossMark"
                              Style="{StaticResource PathButtonGrayStrokedStyleSmall}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="Gray" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="DarkGray" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonTaskBlueSmall" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource BorderHoverBlueButtonStyle}">
                        <Path x:Name="CrossMark"
                            Style="{StaticResource PathButtonBlackStyleSmall}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CrossMark" Property="Fill" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonTaskRedSmall" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource BorderHoverRedButtonStyle}">
                        <Path x:Name="CrossMark"
                              Style="{StaticResource PathButtonWhiteStrokedStyleSmall}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CrossMark" Property="Fill" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMedium" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Background="Transparent" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                        <Path x:Name="CrossMark"
                              Canvas.Left="2.5"
                              Canvas.Top="2.5"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="LightSlateGray"
                              Stretch="Fill"
                              Stroke="LightSlateGray"
                              StrokeThickness="1"
                              SnapsToDevicePixels="True"
                              Width="15"
                              Height="15" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="Black" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="LightGray" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFunction" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource BorderButtonStyle}">
                        <Path x:Name="CrossMark"
                              Style="{StaticResource PathButtonBlackStyleLarge}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="{StaticResource SelectedPathBackgroundBrush}" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="{StaticResource SelectedPathBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CrossMark" Property="Stroke" Value="LightGray" />
                            <Setter TargetName="CrossMark" Property="Fill" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PathOrangeStyleSmall" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButton}">
        <Setter Property="Fill" Value="{StaticResource OrangeBorderBrush}" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTaskRedSmall}">
        <Setter Property="Content" Value="M 0 0 L 7 7 M 0 7 L 7 0" />
    </Style>

    <Style x:Key="PopupCloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBlackStrokedSmall}">
        <Setter Property="Content" Value="M 0 0 L 7 7 M 0 7 L 7 0" />
    </Style>

    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTaskBlueSmall}">
        <Setter Property="Content" Value="M0,0L53.333,0 53.333,8.888 0,8.888z" />
    </Style>

    <Style x:Key="MaximizeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTaskBlueSmall}">
        <Setter Property="Content" Value="M58.6602,303.864L58.6602,749.742 596.391,749.742 596.391,600.394 171.95,600.394 171.95,303.864z M230.611,77.2583L230.611,523.136 768.342,523.136 768.342,77.2583z M171.95,0L827,0 827,600.394 655.049,600.394 655.049,827 0,827 0,226.606 171.95,226.606z" />
    </Style>

    <Style x:Key="NextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonMedium}">
        <Setter Property="Content" Value="M219.30485534668,0L293.813732147217,0 453.999992370605,228.832096099854 416.758255004883,281.968082427979 292.834884643555,459 220.258239746094,459 219.30485534668,457.664199829102 353.15368206799,266.404300689697 0,266.404300689697 0,191.141151428223 353.15368206799,191.141151428223z" />
    </Style>

    <Style x:Key="PreviousButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonMedium}">
        <Setter Property="Content" Value="M100.661972687318,0L147.487023041322,0 63.3680083013314,79.771056062702 285.305016205384,79.771056062702 285.305016205384,111.138052827839 63.3680083013314,111.138052827839 147.487023041322,190.909117586139 146.885170624329,191.501006013874 101.277153656556,191.501006013874 23.4035479284066,117.648421175007 0,95.4545582599676zz" />
    </Style>

    <Style x:Key="AddButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonFunction}">
        <Setter Property="Content" Value="M342.522,146.43L342.522,343.653 145.298,343.653 145.298,437.611 342.522,437.611 342.522,634.834 436.478,634.834 436.478,437.611 633.701,437.611 633.701,343.653 436.478,343.653 436.478,146.43z M389.517,0C604.233,0 779,174.729 779,389.517 779,604.27 604.233,779 389.517,779 174.693,779 0,604.27 0,389.517 0,174.729 174.693,0 389.517,0z" />
    </Style>

    <Style x:Key="RemoveButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonFunction}">
        <Setter Property="Content" Value="M19.85228,12.08996L12.093,19.849201 24.242323,31.997846 12.094,44.145998 19.852051,51.904958 32.001186,39.756277 44.150543,51.904958 51.909,44.145994 39.760246,31.997501 51.909,19.849201 44.15049,12.08996 32.001431,24.238849z M32,0C49.671021,3.1599484E-07 64,14.329407 64,31.998501 64,49.677606 49.671021,63.997003 32,63.997003 14.328003,63.997003 0,49.677606 0,31.998501 0,14.329407 14.328003,3.1599484E-07 32,0z" />
    </Style>

    <Style x:Key="InValidateButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonFunction}">
        <Setter Property="Content" Value="M37.858005,16.885125C37.439006,16.885125,37.102004,17.199122,37.102004,17.58812L37.102004,27.101056C37.102004,27.492053 37.439006,27.806052 37.858005,27.806052 38.273002,27.806052 38.610003,27.492053 38.610003,27.101056L38.610003,17.58812C38.610003,17.199122,38.273002,16.885125,37.858005,16.885125z M34.07701,16.885125C33.659011,16.885125,33.321012,17.199122,33.321012,17.58812L33.321012,27.101056C33.321012,27.492053 33.659011,27.806052 34.07701,27.806052 34.495009,27.806052 34.833011,27.492053 34.833011,27.101056L34.833011,17.58812C34.833011,17.199122,34.495009,16.885125,34.07701,16.885125z M30.297017,16.885125C29.881017,16.885125,29.541018,17.199122,29.541018,17.58812L29.541018,27.101056C29.541018,27.492053 29.881017,27.806052 30.297017,27.806052 30.717015,27.806052 31.052016,27.492053 31.052016,27.101056L31.052016,17.58812C31.052016,17.199122,30.717015,16.885125,30.297017,16.885125z M26.862023,14.831139L41.274997,14.831139 41.274997,26.846059C41.274997,28.356048,39.620002,29.58204,37.581004,29.58204L30.556016,29.58204C28.51702,29.58204,26.862023,28.356048,26.862023,26.846059z M32.641002,10.472059L35.501002,10.472059C36.263,10.472059 36.88,11.054074 36.88,11.780093 36.88,12.048099 36.77,12.288106 36.620002,12.498112L40.516002,12.498112C41.006,12.498112 41.401999,12.873121 41.401999,13.337133 41.401999,13.799145 41.006,14.174154 40.516002,14.174154L27.623002,14.174154C27.132001,14.174154 26.738002,13.799145 26.738002,13.337133 26.738002,12.873121 27.132001,12.498112 27.623002,12.498112L31.519002,12.498112C31.369002,12.288106 31.262002,12.048099 31.262002,11.780093 31.262002,11.054074 31.879001,10.472059 32.641002,10.472059z M0.56400025,2.3771171L14.329006,16.140101C14.785007,16.594102,15.517007,16.594102,15.972007,16.140101L29.685014,2.4291183C29.965013,2.6131176,30.149013,2.9301173,30.149013,3.2911166L30.149013,11.054108 30.048013,11.028108C25.440011,10.298109,25.440011,13.309105,25.440011,13.309105L25.440011,21.975095 1.0350009,21.975095C0.4630003,21.975095,0,21.514096,0,20.942096L0,3.2911166C0,2.8901173,0.23000014,2.5471176,0.56400025,2.3771171z M2.162643,0L28.141994,0C28.130946,0.24402427,28.02694,0.49000172,27.836936,0.68104635L15.831832,12.616263C15.427773,13.012268,14.793793,13.012268,14.409755,12.622245L2.4355954,0.73707787C2.2366187,0.5360233,2.1476282,0.26599745,2.162643,0z" />
    </Style>

    <Style x:Key="RemoveFilterButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonFunction}">
        <Setter Property="Content" Value="M0.33299977,11.255001L37.041462,11.255001C37.024662,11.5465 36.998562,11.833101 36.998562,12.127001 36.998562,16.835509 39.218578,21.028417 42.66,23.739322L32.947735,35.025546 32.947735,63.215999 21.340952,56.585582 21.340952,34.473741z M1.2878267,4.0470002L39.629997,4.0470002C38.814808,5.2892774,38.189812,6.6619451,37.776917,8.1230001L1.2878267,8.1230001C0.57567823,8.1229997,2.9802322E-08,7.5472746,0,6.8362782L0,5.3361609C2.9802322E-08,4.622725,0.57567823,4.0469999,1.2878267,4.0470002z M49.429409,3.7740004L46.442997,6.7597783 50.784157,11.100458 46.442997,15.441261 49.42902,18.426001 53.769852,14.085821 58.110516,18.426001 61.096996,15.440762 56.756023,11.100098 61.096996,6.7597783 58.111217,3.7740004 53.770287,8.1145711z M53.78915,0C59.935287,0 64.920998,5.0389932 64.920998,11.25525 64.920998,17.469967 59.935287,22.509999 53.78915,22.509999 47.643211,22.509999 42.66,17.469967 42.66,11.25525 42.66,5.0389932 47.643211,0 53.78915,0z" />
    </Style>

    <Style x:Key="UpButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonGrayStrokedSmall}">
        <Setter Property="Content" Value="M142.6159,0L285.305,191.5 0,191.5z" />
    </Style>

    <Style x:Key="DownButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonGrayStrokedSmall}">
        <Setter Property="Content" Value="M0,0L516.999987125397,0 258.499987125397,318.999981067944z" />
    </Style>

    <Style x:Key="RunButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonFunction}">
        <Setter Property="Content" Value="M44.817715,32.701C44.817715,36.424438 43.317719,39.769474 40.880226,42.212898 38.434834,44.649822 35.091141,46.147739 31.369753,46.150341 27.679762,46.150341 24.35157,44.671223 21.919287,42.2715L26.742264,37.44965 13.336,37.44965 13.336,50.854187 17.786488,46.404942C21.270859,49.861279 26.078165,52 31.369753,52 42.028622,51.998199 50.661396,43.359409 50.663998,32.701z M32.635052,12C21.97893,12.002014,13.341001,20.637493,13.341001,31.295L19.187323,31.295C19.189894,27.57238 20.68988,24.227364 23.127359,21.784601 25.567509,19.347088 28.913782,17.849091 32.635052,17.84647 36.379917,17.84647 39.757488,19.373089 42.197472,21.83989L37.58041,26.455275 50.660995,26.455275 50.660995,13.373056 46.330338,17.702539C42.838165,14.183121,37.989204,12,32.635052,12z M32,0C49.6744,0 64,14.3269 64,32 64,49.673199 49.6744,64 32,64 14.3281,64 0,49.673199 0,32 0,14.3269 14.3281,0 32,0z" />
    </Style>

    <Style x:Key="PathNavigationPatient" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M42.123207,35.952998C42.123207,35.952998,59.814095,40.166618,61.498001,57.012999L0,57.012999C-3.5527137E-15,57.012999,5.055995,38.480312,20.221399,36.794204L24.326918,54.381586 27.344988,54.356802 30.777908,45.354411 27.573,39.798999 33.978001,39.798999 30.907883,45.495424 34.821835,54.295404 37.174583,54.276085z M30.32205,0C39.69651,0 47.298,7.5988789 47.298,16.975199 47.298,26.351399 39.69651,33.953 30.32205,33.953 20.946487,33.953 13.347,26.351399 13.347,16.975199 13.347,7.5988789 20.946487,0 30.32205,0z" />
    </Style>

    <Style x:Key="PathNavigationStaff" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M53.57419,39.898067C53.655519,39.897432 53.734729,39.901042 53.811636,39.909423 62.215319,40.833787 53.035627,53.487085 53.497832,58.228998 51.115012,56.697863 52.404125,53.031304 49.390993,52.859512 46.569368,52.699218 46.709968,55.794196 45.285554,58.228998 45.025053,53.252697 40.64091,48.386987 40.861012,44.331147 41.004213,41.74525 43.137035,39.035755 46.547269,40.22711 47.245175,40.469299 48.148782,41.122872 49.113692,41.026677 50.657863,40.872746 52.354262,39.907616 53.57419,39.898067z M14.232027,31.278998C17.663082,33.860942 21.926149,35.393411 26.544724,35.39341 31.160698,35.393411 35.423762,33.860942 38.85612,31.278998 43.62009,31.877426 47.744613,34.533156 50.309548,38.328824L50.664001,38.879323 50.359998,38.981643C49.856192,39.146745 49.357168,39.290091 48.916759,39.332917 48.683652,39.332917 48.263045,39.131213 47.925839,38.969811 47.635432,38.831608 47.359425,38.705307 47.106818,38.616806 46.378904,38.362901 45.64969,38.233999 44.946571,38.233999 41.402195,38.233999 39.321451,41.327747 39.160046,44.239292 39.025844,46.705431 40.165267,49.131369 41.369694,51.697809 41.756888,52.523983 42.149415,53.360411 42.494724,54.196104L42.619304,54.504999 0,54.504999 0,47.427053C0,39.130429,6.2084389,32.286876,14.232027,31.278998z M12.623047,9.6473312L13.114754,9.6888313C16.109709,9.93293,19.416731,10.081987,22.985689,10.13357L23.322653,10.137604 23.356148,10.18469C24.095949,11.173714 25.276247,11.814999 26.60435,11.814999 27.931623,11.814999 29.112535,11.173714 29.852973,10.18469L29.901071,10.117136 30.60254,10.103621C34.863437,10.014765,38.374147,9.8279533,40.353023,9.7046242L40.483457,9.6963959 40.506044,9.7558193C41.089548,11.349684 41.408001,13.071259 41.408001,14.867098 41.408001,23.075443 34.752981,29.728999 26.544651,29.728999 18.333622,29.728999 11.68,23.075443 11.68,14.867098 11.68,13.071259 11.998386,11.349684 12.581814,9.7558193z M26.604051,5.4179993C27.896869,5.4179993 28.945002,6.4661942 28.945002,7.7606239 28.945002,9.0524921 27.896869,10.101999 26.604051,10.101999 25.311133,10.101999 24.263,9.0524921 24.263,7.7606239 24.263,6.4661942 25.311133,5.4179993 26.604051,5.4179993z M26.544651,0C32.059623,0,36.873405,3.0053215,39.438674,7.4674835L39.470543,7.5245018 39.312198,7.5340614C36.802494,7.6870804,34.201223,7.7933159,31.536687,7.8514748L30.657279,7.8674164 30.660001,7.7602425C30.660001,5.5233078 28.839757,3.7029991 26.60435,3.7029991 24.367544,3.7029991 22.550001,5.5233078 22.550001,7.7602425L22.5527,7.8666763 22.162161,7.8595123C17.232002,7.7626495,14.029404,7.5408058,13.989717,7.5367508L13.624449,7.5115356 13.649069,7.4674835C16.214121,3.0053215,21.027866,0,26.544651,0z" />
    </Style>

    <Style x:Key="PathNavigationReminder" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M383.454,490.47C212.497,490.47 73.8496,527.314 73.8496,572.77 73.8496,614.346 190.086,648.326 340.598,653.945L340.598,584.566C340.598,557.508 364.509,535.551 394.189,535.551 423.872,535.551 447.926,557.508 447.926,584.566L447.926,653.244C587.981,645.331 693.102,612.373 693.102,572.77 693.102,527.314 554.454,490.47 383.454,490.47z M316.545,0L461.099,0 461.099,83.3755C555.579,104.864 623.897,163.709 623.897,233.742 623.897,233.742 612.409,302.654 623.897,323.859 670.267,409.341 767,486.961 767,541.545 767,627.401 629.008,670.286 447.926,678.286L447.926,717.989C447.926,745.043 423.872,767 394.189,767 364.509,767 340.598,745.043 340.598,717.989L340.598,679.13C149.059,673.698 0,630.82 0,541.545 0,486.961 96.7786,409.341 143.009,323.859 154.545,302.654 143.009,233.742 143.009,233.742 143.009,161.138 216.578,100.511 316.545,81.175z" />
    </Style>

    <Style x:Key="PathNavigationNotificationTemplate" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M0,1.4200591L0.040033408,1.4200591 12.618441,13.742285 26.626588,27.494828 40.634736,13.742285 53.213021,1.4200591 53.333001,1.4200591 53.333001,39.08706 0,39.08706z M3.1698927,0L26.665893,0 50.161893,0 38.413892,9.8814956 26.665893,19.76299 14.917893,9.8814956z" />
    </Style>

    <Style x:Key="PathNavigationNotificationGroup" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M1.5395724,16.688C0.080589782,30.399675 8.6124473,42.629974 20.773888,44.110451 28.151351,45.011734 35.174817,41.746189 39.988694,35.996284L34.355217,31.594054 58.051003,22.024813 54.489819,47.329098 49.122147,43.135365C43.329678,50.289948 34.100522,54.396877 24.28887,53.2001 9.1404443,51.353931 -1.6420516,37.580757 0.20619931,22.431106 0.44978818,20.432539 0.90486595,18.51607 1.5395724,16.688z M2.4060002,4.0830002L2.4398132,4.0830002 15.017828,16.408693 29.030949,30.153296 43.046368,16.408693 55.624497,4.0830002 55.738999,4.0830002 55.738999,20.091501 29.092068,30.852287 36.05753,36.296757C35.001236,37.288593,33.876011,38.149323,32.697846,38.872215L32.343953,39.083 14.071445,39.083 13.963607,39.022141C7.7336889,35.404507,3.0127323,28.37837,2.4178641,20.553452L2.4060002,20.365894 2.4060002,17.417036 2.4231692,17.158619C2.4383455,16.968145,2.4560731,16.777431,2.4763875,16.58651L2.4060002,16.57078z M5.5750003,0L29.072245,0 52.566998,0 40.817021,11.783799 29.072245,23.573 17.327569,11.783799z" />
    </Style>

    <Style x:Key="PathNavigationAppointment" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M8.7139998,35.064L27.108,35.064 27.108,37.726998 8.7139998,37.726998z M8.7139998,28.418999L20.903999,28.418999 20.903999,31.077 8.7139998,31.077z M20.437819,13.65L25.973,18.895532 18.167,21.591z M29.105799,3.574L35.007,9.0182717 27.724232,16.911999 27.601828,15.664531 25.656441,15.001693 25.599159,13.67742 23.664192,13.165692 23.428524,11.672108 21.823,11.466397z M14.322772,3.4320003L26.465963,3.4320003 23.150892,6.9789109 15.700359,6.9789109 15.700359,12.916528C15.700359,12.916528,15.549361,18.036388,9.8462821,17.591081L3.5442484,17.617083 3.5442484,41.038552C3.5442484,41.528855,3.9413749,41.92466,4.4296509,41.92466L29.247139,41.92466C29.736734,41.92466,30.13253,41.528855,30.13253,41.038552L30.13253,17.038276 33.681999,13.460835 33.681999,41.038552C33.681999,43.486577,31.700216,45.469002,29.247139,45.469002L4.4296509,45.469002C1.9817624,45.469002,8.71878E-08,43.486577,0,41.038552L0,18.544193 3.5442484,14.80455 3.5442484,14.833151 10.984302,6.9789109 10.962102,6.9789109z M33.154091,0.0010778904C33.416405,0.011748075,33.661049,0.10176969,33.851479,0.27656603L38.027401,4.1333629C38.539116,4.599481,38.470112,5.4991968,37.881497,6.1359136L37.080772,7.0070002 31.061001,1.453685 31.864424,0.58387709C32.230621,0.18592978,32.7169,-0.016706228,33.154091,0.0010778904z" />
    </Style>

    <Style x:Key="PathNavigationLogin" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M56.8414,35.496597C55.320599,35.496597 54.154301,36.6628 54.154301,38.183597 54.154301,39.7033 55.320599,40.865101 56.8414,40.865101 58.360901,40.865101 59.522999,39.7033 59.522999,38.183597 59.522999,36.6628 58.360901,35.496597 56.8414,35.496597z M54.6049,32.814998C58.807201,32.814998 62.209999,36.213199 62.209999,40.420097 62.209999,44.622398 58.807201,48.0251 54.6049,48.0251 53.621899,48.0251 52.726299,47.8451 51.917801,47.5746L47.8955,51.602398 45.208298,51.602398 45.208298,54.283901 42.526798,54.283901 42.526798,56.971 38.053997,56.971 38.053997,52.498199 47.445,43.1016C47.178699,42.205898 46.999901,41.315799 46.999901,40.420097 46.999901,36.213199 50.398201,32.814998 54.6049,32.814998z M25.656813,2.7370106E-11C25.699913,-2.9658239E-07,25.740114,0.0024105723,25.782015,0.0030822792L25.906013,2.7370106E-11C35.763958,-2.9658239E-07 37.612366,7.037688 37.354065,9.7611138 37.145763,11.946795 36.614361,14.78777 36.614361,14.78777 36.614361,14.78777 37.660469,15.265066 37.660469,17.184148 37.294365,21.999607 35.378857,19.924123 34.983654,22.034208 34.206051,26.18527 32.619347,26.344169 32.062141,27.773655 31.936441,28.094953 31.862942,28.47945 31.862942,28.990146 31.862942,33.615707 34.132549,35.776787 41.234882,38.337864 42.745388,38.882461 44.069096,39.428951 45.234097,39.969848 45.226898,40.120048 45.2113,40.26815 45.2113,40.420147 45.2113,41.10374 45.290497,41.800533 45.457001,42.559524L36.265362,51.757446 36.265362,57.015999 0,57.015999 0,45.313305C0,43.526416 3.2042041,40.906841 10.328646,38.337864 17.430876,35.776787 19.700388,33.615707 19.700388,28.990146 19.700388,28.47945 19.626886,28.094253 19.501986,27.773655 18.944784,26.344169 17.357477,26.18527 16.580473,22.034208 16.185171,19.924123 14.269663,21.999607 13.903061,17.184148 13.903061,15.265066 14.949165,14.78777 14.949165,14.78777 14.949165,14.78777 14.417164,11.946795 14.209463,9.7611138 13.951262,7.037688 15.79957,-2.9658239E-07 25.656813,2.7370106E-11z" />
    </Style>

    <Style x:Key="PathNavigationEducation" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M37.117872,40.924002L50.506003,55.464827 43.235132,54.643202 42.063321,61.504004 29.985002,46.33686z M47.541636,33.532002L64.000004,40.792327 57.861979,43.767359 59.276184,50.361002 39.828003,38.973271z M22.45092,20.61991C23.532913,20.652822,24.211258,20.953975,24.211258,20.953975L9.1802597,32.134935C20.818081,35.343352,19.859888,46.969714,19.859888,46.969714L32.654001,37.633664C32.495102,40.213178,29.74262,43.103793,29.74262,43.103793L16.672308,52.693745C11.174946,55.753561 7.4613724,53.348648 7.4613724,53.348648 5.6646118,52.718344 2.2766647,49.357727 2.2766647,49.357727 -2.785862,43.787396 2.175045,39.224872 2.175045,39.224872 5.7504616,36.756059 9.3989582,38.79647 9.3989582,38.79647 13.211332,40.56468 14.273926,45.580406 14.273926,45.580406L11.695843,46.18971C10.013554,39.422773 4.7452774,40.980082 4.7452774,40.980081 0.099472046,43.875998 4.6228714,47.943719 4.6228714,47.943719 12.320839,55.575159 16.198412,49.247026 16.198412,49.247026 19.365091,43.640196 14.393724,38.261267 14.393724,38.261267 8.6827621,32.296435 4.0551529,35.844654 4.0551529,35.844654L2.5161057,33.538542 18.268698,21.89528C19.883287,20.822324,21.368927,20.586998,22.45092,20.61991z M27.931086,16.431051C30.030733,16.438269 32.578069,17.223774 35.41463,19.658504 35.41463,19.658504 42.792083,26.333 40.568127,33.486802 40.568127,33.486802 39.021358,37.784964 33.998059,40.444002 33.998059,40.444002 38.609967,33.145597 32.370491,24.062167 32.370492,24.062167 29.039659,18.02818 21.868002,18.878492 21.868002,18.878492 24.188236,16.418188 27.931086,16.431051z M36.842772,9.9370022C37.633915,9.9368954 38.49829,10.042305 39.41488,10.312323 39.414881,10.312323 47.008735,12.22887 49.646753,22.533299 49.646753,22.533299 50.612861,27.099579 47.578939,30.380893L42.977506,33.856001C42.977506,33.856001 46.37843,22.743094 33.966843,15.471087 33.966842,15.471087 30.763819,13.994425 28.545003,14.047924L32.125828,11.283596C32.125829,11.283596,34.017261,9.9373779,36.842772,9.9370022z M50.886588,0C52.837581,-0.00043487549 55.353003,0.5996933 58.130627,2.7348595 58.130627,2.7348595 64.812771,8.0213261 63.250208,16.142643 63.250208,16.142643 62.127834,19.599594 59.518595,21.171317L51.563078,27.010001 52.36516,23.069744 58.510717,18.491578C58.510717,18.491578 61.81794,16.475948 60.53157,10.992868 60.53157,10.992868 58.979506,4.9158001 52.891148,2.9548626 52.891148,2.9548626 49.643823,2.2596321 47.677668,3.7712536L41.54761,8.2349281 37.566002,7.7010307 46.802788,0.99389267C46.802788,0.99389267,48.37817,0.0005607605,50.886588,0z" />
    </Style>

    <Style x:Key="PathNavigationPosition" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M421.284,381.888C339.661,381.888,268.338,443.52,228.7,535.488L613.911,535.488C574.229,443.52,502.906,381.888,421.284,381.888z M421.327,232.512C379.604,232.512 345.833,262.387 345.833,299.212 345.833,336 379.604,365.913 421.327,365.913 463.008,365.913 496.778,336 496.778,299.212 496.778,262.387 463.008,232.512 421.327,232.512z M72.7557,0L769.768,0 769.768,768 72.7557,768 72.7557,717.964 0,717.964 0,666.662 72.7557,666.662 72.7557,562.752 0,562.752 0,511.45 72.7557,511.45 72.7557,407.539 0,407.539 0,356.237 72.7557,356.237 72.7557,252.364 0,252.364 0,201.062 72.7557,201.062 72.7557,97.1519 0,97.1519 0,45.8496 72.7557,45.8496z" />
    </Style>

    <Style x:Key="PathNavigationBackup" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M26.79975,52.910086L54.507193,52.910086C55.597094,52.910086,56.487011,53.799538,56.487011,54.898861L56.487011,60.685295C56.487011,61.774624,55.597094,62.664076,54.507193,62.664076L26.79975,62.664076C25.70985,62.664076,24.819932,61.774624,24.819933,60.685295L24.819933,54.898861C24.819932,53.799538,25.70985,52.910086,26.79975,52.910086z M26.799705,40.599995L54.507109,40.599995C55.597097,40.599995,56.486908,41.490101,56.486908,42.580179L56.486908,48.370812C56.486908,49.4709,55.597097,50.350995,54.507109,50.350995L26.799705,50.350995C25.70984,50.350995,24.819907,49.4709,24.819907,48.370812L24.819907,42.580179C24.819907,41.490101,25.70984,40.599995,26.799705,40.599995z M2.9911785,37.030091L22.608904,37.030091 22.608904,51.823042 2.9911785,51.823042C1.3305244,51.823042,0,50.473685,0,48.814476L0,40.038657C0,38.379448,1.3305244,37.030091,2.9911785,37.030091z M30.649395,31.131425C29.409509,31.131425 28.399602,32.141932 28.399601,33.382554 28.399602,34.623177 29.409509,35.633683 30.649395,35.633684 31.88928,35.633683 32.899187,34.623177 32.899187,33.382554 32.899187,32.141932 31.88928,31.131425 30.649395,31.131425z M26.79975,28.510111L54.507193,28.510111C55.597094,28.510111,56.487011,29.400558,56.487011,30.491104L56.487011,36.284009C56.487011,37.374557,55.597094,38.254998,54.507193,38.254997L26.79975,38.254997C25.70985,38.254998,24.819932,37.374557,24.819932,36.284009L24.819932,30.491104C24.819932,29.400558,25.70985,28.510111,26.79975,28.510111z M2.9901848,18.350023L45.032776,18.350023C46.692879,18.350023,48.042961,19.700212,48.042961,21.350445L48.042961,25.911087 25.311561,25.911087C23.821469,25.911087,22.601394,27.121258,22.601394,28.611467L22.601394,33.142105 2.9901848,33.142105C1.3300819,33.142106,0,31.801917,0,30.141683L0,21.350445C0,19.700212,1.3300819,18.350023,2.9901848,18.350023z M8.8305454,3.9897499C6.9604301,3.9897499 5.4203358,5.509655 5.4203358,7.3895416 5.4203358,9.2794228 6.9604301,10.799328 8.8305454,10.799328 10.710661,10.799328 12.240755,9.2794228 12.240755,7.3895416 12.240755,5.509655 10.710661,3.9897499 8.8305454,3.9897499z M2.9901848,0L45.032776,0C46.692879,0,48.042961,1.3499146,48.042961,3.0098114L48.042961,11.789267C48.042961,13.449163,46.692879,14.789082,45.032776,14.789082L2.9901848,14.789082C1.3300819,14.789082,0,13.449163,0,11.789267L0,3.0098114C0,1.3499146,1.3300819,0,2.9901848,0z" />
    </Style>

    <Style x:Key="PathNavigationSetting" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M430.141,251.263C328.446,250.606 245.521,329.627 244.854,427.733 244.187,525.813 326.124,605.879 427.695,606.469 529.475,607.126 612.428,528.185 613.094,430.039 613.762,331.919 531.838,251.893 430.141,251.263z M431.767,0.006683C470.298,0.288086,507.48,5.75656,542.982,14.8701L557.626,108.728C593.544,122.09,626.684,140.733,655.834,163.999L747.944,130.359C799.716,181.865,837.899,245.781,857.768,317.096L780.652,376.429C783.501,394.16 785.362,412.414 785.182,430.977 785.014,449.754 783,467.901 779.901,485.806L856.253,545.943C835.342,616.976,796.353,680.384,743.928,731.313L652.347,696.614C622.862,719.412,589.418,737.518,553.416,750.573L537.465,844.363C501.783,852.981 464.587,857.899 426.071,857.765 387.595,857.484 350.413,852.042 314.787,842.889L300.308,749.071C264.376,735.602,231.167,716.972,202.058,693.786L109.949,727.333C58.1769,675.921,19.9941,611.91,0,540.676L77.2407,481.41C74.3233,463.545 72.5025,445.398 72.6416,426.648 72.8087,408.045 74.8508,389.831 77.9353,372.06L1.56978,311.856C22.44,240.729,61.4844,177.348,113.854,126.526L205.602,161.252C235.002,138.28,268.475,120.173,304.505,107.119L320.303,13.4362C356.055,4.75122,393.293,-0.207642,431.767,0.006683z" />
    </Style>

    <Style x:Key="PathNavigationAbout" TargetType="{x:Type Path}" BasedOn="{StaticResource PathButtonWhiteStyleLarge}">
        <Setter Property="Data" Value="M267.106872226836,0.000185378049536666C364.804229404571,-0.198609494392258 326.636962558867,159.555911801036 326.636962558867,159.555911801036 314.181182529571,251.962543270763 243.653258945586,318.986362240489 243.653258945586,318.986362240489 228.63529935086,319.446658871349 231.25443997586,308.114261410411 231.25443997586,308.114261410411 258.201598789336,172.237949154552 167.01127591336,183.800494930919 167.01127591336,183.800494930919 167.01127591336,183.800494930919 75.7783733865041,172.237949154552 102.725555088164,308.114261410411 102.725555088164,308.114261410411 105.302108432891,319.446658871349 90.2910992165823,318.986362240489 90.2910992165823,318.986362240489 19.7844521065969,251.962543270763 7.34304633343407,159.555911801036 7.34304633343407,159.555911801036 -30.8242591360789,-0.198609404985291 66.8731304665823,0.000190354746337107 68.4238735696096,0.00334130481587636 70.0088573952932,0.0467974461871563 71.6287685891409,0.131833753760475 71.6287685891409,0.131832844789642 117.216560032012,32.7480275847274 152.477264072539,18.2498758055526L167.01127591336,12.8137786604721 181.502715732696,18.2498758055526C216.756026889922,32.7480275847274 262.351226474883,0.131832844789642 262.351226474883,0.131833753760475 263.971130039336,0.0468006946402966 265.556121494414,0.0033445041417508 267.106872226836,0.000185378049536666z" />
    </Style>

    <Style x:Key="WarningIcon" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{StaticResource OrangeBorderBrush}" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Data" Value="M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z" />
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Panel.ZIndex="100"
                                Background="{StaticResource NormalTabControlBackgroundBrush}">
                            <TabPanel IsItemsHost="True" />
                        </Border>
                        <Border Grid.Row="1"
                                Panel.ZIndex="50"
                                Margin="0,0,0,0" BorderBrush="{StaticResource NormalTabControlBorderBrush}" BorderThickness="1" Padding="8,6" Background="{StaticResource WindowBackgroundBrush}">
                            <ContentPresenter ContentSource="SelectedContent"
                                              Margin="0" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            BorderThickness="1,1,1,0"
                            Margin="3,1,3,0"
                            CornerRadius="3,3,0,0" >
                        <Border x:Name="InnerBorder"
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderThickness="0,0,0,1"
                                CornerRadius="3,3,0,0">
                            <ContentPresenter ContentSource="Header"
                                              Margin="8,4" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalTabControlBackgroundBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource NormalTabControlBackgroundBrush}" />
                            <Setter Property="Panel.ZIndex" Value="0" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalTabControlBorderBrush}" />
                            <Setter TargetName="Border" Property="Margin" Value="3,1,3,-1" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource WindowBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedTabItemBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                            Margin="0" 
                            CornerRadius="0"
                            Background="{StaticResource NormalScrollBarLineButtonBackgroundBrush}"
                            BorderBrush="{StaticResource NormalScrollBarLineButtonBorderBrush}"
                            BorderThickness="1">
                        <Path x:Name="Path"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{StaticResource NormalScrollBarThumbBackgroundBrush}"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalScrollBarThumbBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NormalScrollBarBorderBrush}"/>
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource GlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedScrollBarLineButtonBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedScrollBarLineButtonBorderBrush}" />
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource NormalScrollBarThumbBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Border" 
                            Background="{StaticResource NormalScrollBarThumbBackgroundBrush}" 
                            BorderBrush="{StaticResource NormalScrollBarBorderBrush}" 
                            BorderThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedScrollBarThumbBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedScrollBarThumbBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    CornerRadius="2"
                    Background="{StaticResource NormalBackgroundBrush}" />
            <RepeatButton Grid.Row="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0"
                           Background="{StaticResource NormalBackgroundBrush}"
                           BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="2"
                    Background="#F0F0F0" />
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="15"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0"
                           Background="{StaticResource NormalBackgroundBrush}"
                           BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="15" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource NormalDataGridColumnHeaderBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NormalDataGridColumnHeaderForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalDataGridBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder"
                                Background="{StaticResource NormalDataGridColumnHeaderBackgroundBrush}"
                                BorderThickness="0,0,1,1"
                                BorderBrush="{StaticResource NormalDataGridBorderBrush}"
                                Grid.ColumnSpan="2" />
                        <ContentPresenter Grid.Column="0"
                                          Margin="6,3,6,3"
                                          VerticalAlignment="Center" />
                        <Path x:Name="SortArrow"
                              Visibility="Collapsed"
                              Data="M0,0 L1,0 0.5,1 z"
                              Stretch="Fill"
                              Grid.Column="1"
                              Width="8"
                              Height="6"
                              Fill="Gray"
                              Margin="0,0,8,0"
                              VerticalAlignment="Center"
                              RenderTransformOrigin="0.5,0.4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource MouseOverDataGridColumnHeaderBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource MouseOverDataGridColumnHeaderBorderBrush}" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedDataGridCellBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource DataGridRowBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="ContextMenu" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="{StaticResource DataGridRowBackgroundBrush}" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource AltDataGridRowBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverDataGridRowBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedDataGridRowBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True" >
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="FontSize" Value="12" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Apply this style to all data grid rows by default.
         Patient datagrid overrides base style. -->
    <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRow}"/>

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalDataGridBorderBrush}"/>
    </Style>

    <Style TargetType="{x:Type DataGrid}" x:Key="DataGridDefaultStyle">
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="AlternationCount" Value="2" />

        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource NormalDataGridAlternatingRowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalDataGridBorderBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource NormalDataGridLinesBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource NormalDataGridLinesBrush}"/>

        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>

        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>

        <Setter Property="HeadersVisibility" Value="Column"/>

        <Setter Property="RowHeight" Value="23"/>
    </Style>

    <Style x:Key="BorderDialog" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource OrangeBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="White" />
        <Style.Triggers>
            <!-- Fix issue with focusing element after enabling it -->
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="FocusManager.FocusedElement"
                        Value="{Binding ElementName=FocusableControl}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderMainInfo" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFEFF4F8" />
        <Setter Property="BorderBrush" Value="Silver" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Height" Value="25" />
    </Style>

    <Style x:Key="BorderImage" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Silver" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="TextBlockMainInfo" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="ForceCursor" Value="True" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextArea" TargetType="{x:Type TextBox}">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalTextboxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Height="22">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight"
                                                    BorderBrush="#FF45D6FA"
                                                    BorderThickness="1"
                                                    Grid.ColumnSpan="4"
                                                    CornerRadius="0,0,1,1"
                                                    Margin="-1" Opacity="0"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="4"/>
                                            <Border x:Name="Background"
                                                    BorderBrush="#FFFFFFFF"
                                                    BorderThickness="1"
                                                    Background="#FF1F3B53"
                                                    Grid.ColumnSpan="4"
                                                    Grid.Column="0"
                                                    CornerRadius=".5"
                                                    Margin="0,-1,0,0"
                                                    Opacity="1"
                                                    Grid.Row="1"
                                                    Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient"
                                                    BorderBrush="#BF000000"
                                                    BorderThickness="1"
                                                    Grid.ColumnSpan="4"
                                                    Grid.Column="0"
                                                    CornerRadius=".5"
                                                    Margin="0,-1,0,0"
                                                    Opacity="1"
                                                    Grid.Row="1"
                                                    Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4"
                                                       Grid.Column="0"
                                                       Grid.Row="0"
                                                       StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Grid.ColumnSpan="4"
                                                  Grid.Column="0"
                                                  Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                                  Fill="#FF2F2F2F"
                                                  HorizontalAlignment="Center"
                                                  Margin="4,3,4,3"
                                                  Grid.Row="1"
                                                  Grid.RowSpan="3"
                                                  RenderTransformOrigin="0.5,0.5"
                                                  Stretch="Fill"
                                                  VerticalAlignment="Center"/>
                                            <Ellipse Grid.Row="0"
                                                     Grid.ColumnSpan="4"
                                                     Grid.Column="0"
                                                     Fill="#FFFFFFFF"
                                                     HorizontalAlignment="Center"
                                                     Height="3"
                                                     StrokeThickness="0"
                                                     VerticalAlignment="Center"
                                                     Width="3"/>
                                            <Border x:Name="DisabledVisual"
                                                    BorderBrush="#B2FFFFFF"
                                                    BorderThickness="1"
                                                    Grid.ColumnSpan="4"
                                                    Grid.Column="0"
                                                    Opacity="0"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1" Grid.Row="0" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="2,0,1,0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20" Height="20" />
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Center"/>
                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" Grid.Row="0"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Margin="2,0,0,0" Grid.Row="0" Width="20" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Popup Grid.Column="0" x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="1" Padding="{TemplateBinding Padding}">
                            <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="1"/>
                                <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="1">
                                    <ContentControl x:Name="PART_Watermark" Focusable="False" Visibility="Hidden" Padding="2"/>
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" IsHitTestVisible="False" Opacity="0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>