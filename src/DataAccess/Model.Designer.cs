//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("dentistModel", "FK_Appointment_Staff", "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Staff), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Appointment), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_BackupLogs_BackupTypes", "BackupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.BackupType), "BackupLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.BackupLog), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__BackupTyp__KeyId__30F848ED", "LanguageKey", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccess.LanguageKey), "BackupType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.BackupType), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__LanguageD__Cultu__44FF419A", "Culture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Culture), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.LanguageData), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Staff_Education", "Education", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Education), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Staff), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__LanguageD__KeyId__440B1D61", "LanguageKey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.LanguageKey), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.LanguageData), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__ReminderA__KeyId__3F466844", "LanguageKey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.LanguageKey), "ReminderAlert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.ReminderAlert), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__ReminderF__KeyId__3A81B327", "LanguageKey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.LanguageKey), "ReminderFilter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.ReminderFilter), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__Sexs__KeyId__35BCFE0A", "LanguageKey", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccess.LanguageKey), "Sex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Sex), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Login_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Role), "Login", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Login), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Staff_Position", "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Position), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Staff), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Staff_Sex", "Sex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Sex), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Staff), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__Reminder__AlertI__49C3F6B7", "ReminderAlert", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.ReminderAlert), "Reminder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Reminder), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__Notificat__KeyId__6A30C649", "LanguageKey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.LanguageKey), "NotificationGroupStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.NotificationGroupStatu), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK__Notificat__KeyId__72C60C4A", "LanguageKey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.LanguageKey), "NotificationListStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.NotificationListStatu), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Group_Status", "NotificationGroupStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.NotificationGroupStatu), "NotificationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.NotificationGroup), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Group_TemplateId", "NotificationTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.NotificationTemplate), "NotificationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.NotificationGroup), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_List_GroupId", "NotificationGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.NotificationGroup), "NotificationList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.NotificationList), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_List_Status", "NotificationListStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.NotificationListStatu), "NotificationList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.NotificationList), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Appointment_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Patient), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Appointment), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_List_PatientId", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Patient), "NotificationList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.NotificationList), true)]
[assembly: EdmRelationshipAttribute("dentistModel", "FK_Patient_Sex", "Sex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Sex), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Patient), true)]

#endregion

namespace DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class dentistEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new dentistEntities object using the connection string found in the 'dentistEntities' section of the application configuration file.
        /// </summary>
        public dentistEntities() : base("name=dentistEntities", "dentistEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dentistEntities object.
        /// </summary>
        public dentistEntities(string connectionString) : base(connectionString, "dentistEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dentistEntities object.
        /// </summary>
        public dentistEntities(EntityConnection connection) : base(connection, "dentistEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BackupLog> BackupLogs
        {
            get
            {
                if ((_BackupLogs == null))
                {
                    _BackupLogs = base.CreateObjectSet<BackupLog>("BackupLogs");
                }
                return _BackupLogs;
            }
        }
        private ObjectSet<BackupLog> _BackupLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BackupType> BackupTypes
        {
            get
            {
                if ((_BackupTypes == null))
                {
                    _BackupTypes = base.CreateObjectSet<BackupType>("BackupTypes");
                }
                return _BackupTypes;
            }
        }
        private ObjectSet<BackupType> _BackupTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Culture> Cultures
        {
            get
            {
                if ((_Cultures == null))
                {
                    _Cultures = base.CreateObjectSet<Culture>("Cultures");
                }
                return _Cultures;
            }
        }
        private ObjectSet<Culture> _Cultures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Education> Educations
        {
            get
            {
                if ((_Educations == null))
                {
                    _Educations = base.CreateObjectSet<Education>("Educations");
                }
                return _Educations;
            }
        }
        private ObjectSet<Education> _Educations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageData> LanguageDatas
        {
            get
            {
                if ((_LanguageDatas == null))
                {
                    _LanguageDatas = base.CreateObjectSet<LanguageData>("LanguageDatas");
                }
                return _LanguageDatas;
            }
        }
        private ObjectSet<LanguageData> _LanguageDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageKey> LanguageKeys
        {
            get
            {
                if ((_LanguageKeys == null))
                {
                    _LanguageKeys = base.CreateObjectSet<LanguageKey>("LanguageKeys");
                }
                return _LanguageKeys;
            }
        }
        private ObjectSet<LanguageKey> _LanguageKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Login> Logins
        {
            get
            {
                if ((_Logins == null))
                {
                    _Logins = base.CreateObjectSet<Login>("Logins");
                }
                return _Logins;
            }
        }
        private ObjectSet<Login> _Logins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReminderAlert> ReminderAlerts
        {
            get
            {
                if ((_ReminderAlerts == null))
                {
                    _ReminderAlerts = base.CreateObjectSet<ReminderAlert>("ReminderAlerts");
                }
                return _ReminderAlerts;
            }
        }
        private ObjectSet<ReminderAlert> _ReminderAlerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReminderFilter> ReminderFilters
        {
            get
            {
                if ((_ReminderFilters == null))
                {
                    _ReminderFilters = base.CreateObjectSet<ReminderFilter>("ReminderFilters");
                }
                return _ReminderFilters;
            }
        }
        private ObjectSet<ReminderFilter> _ReminderFilters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sex> Sexs
        {
            get
            {
                if ((_Sexs == null))
                {
                    _Sexs = base.CreateObjectSet<Sex>("Sexs");
                }
                return _Sexs;
            }
        }
        private ObjectSet<Sex> _Sexs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Staff> Staffs
        {
            get
            {
                if ((_Staffs == null))
                {
                    _Staffs = base.CreateObjectSet<Staff>("Staffs");
                }
                return _Staffs;
            }
        }
        private ObjectSet<Staff> _Staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reminder> Reminders
        {
            get
            {
                if ((_Reminders == null))
                {
                    _Reminders = base.CreateObjectSet<Reminder>("Reminders");
                }
                return _Reminders;
            }
        }
        private ObjectSet<Reminder> _Reminders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemUpdate> SystemUpdates
        {
            get
            {
                if ((_SystemUpdates == null))
                {
                    _SystemUpdates = base.CreateObjectSet<SystemUpdate>("SystemUpdates");
                }
                return _SystemUpdates;
            }
        }
        private ObjectSet<SystemUpdate> _SystemUpdates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationTemplate> NotificationTemplates
        {
            get
            {
                if ((_NotificationTemplates == null))
                {
                    _NotificationTemplates = base.CreateObjectSet<NotificationTemplate>("NotificationTemplates");
                }
                return _NotificationTemplates;
            }
        }
        private ObjectSet<NotificationTemplate> _NotificationTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationGroup> NotificationGroups
        {
            get
            {
                if ((_NotificationGroups == null))
                {
                    _NotificationGroups = base.CreateObjectSet<NotificationGroup>("NotificationGroups");
                }
                return _NotificationGroups;
            }
        }
        private ObjectSet<NotificationGroup> _NotificationGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationGroupStatu> NotificationGroupStatus
        {
            get
            {
                if ((_NotificationGroupStatus == null))
                {
                    _NotificationGroupStatus = base.CreateObjectSet<NotificationGroupStatu>("NotificationGroupStatus");
                }
                return _NotificationGroupStatus;
            }
        }
        private ObjectSet<NotificationGroupStatu> _NotificationGroupStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationList> NotificationLists
        {
            get
            {
                if ((_NotificationLists == null))
                {
                    _NotificationLists = base.CreateObjectSet<NotificationList>("NotificationLists");
                }
                return _NotificationLists;
            }
        }
        private ObjectSet<NotificationList> _NotificationLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationListStatu> NotificationListStatus
        {
            get
            {
                if ((_NotificationListStatus == null))
                {
                    _NotificationListStatus = base.CreateObjectSet<NotificationListStatu>("NotificationListStatus");
                }
                return _NotificationListStatus;
            }
        }
        private ObjectSet<NotificationListStatu> _NotificationListStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BackupLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBackupLogs(BackupLog backupLog)
        {
            base.AddObject("BackupLogs", backupLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BackupTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBackupTypes(BackupType backupType)
        {
            base.AddObject("BackupTypes", backupType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cultures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCultures(Culture culture)
        {
            base.AddObject("Cultures", culture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Educations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEducations(Education education)
        {
            base.AddObject("Educations", education);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageDatas(LanguageData languageData)
        {
            base.AddObject("LanguageDatas", languageData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageKeys(LanguageKey languageKey)
        {
            base.AddObject("LanguageKeys", languageKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogins(Login login)
        {
            base.AddObject("Logins", login);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReminderAlerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReminderAlerts(ReminderAlert reminderAlert)
        {
            base.AddObject("ReminderAlerts", reminderAlert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReminderFilters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReminderFilters(ReminderFilter reminderFilter)
        {
            base.AddObject("ReminderFilters", reminderFilter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sexs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSexs(Sex sex)
        {
            base.AddObject("Sexs", sex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffs(Staff staff)
        {
            base.AddObject("Staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reminders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReminders(Reminder reminder)
        {
            base.AddObject("Reminders", reminder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemUpdates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemUpdates(SystemUpdate systemUpdate)
        {
            base.AddObject("SystemUpdates", systemUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationTemplates(NotificationTemplate notificationTemplate)
        {
            base.AddObject("NotificationTemplates", notificationTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationGroups(NotificationGroup notificationGroup)
        {
            base.AddObject("NotificationGroups", notificationGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationGroupStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationGroupStatus(NotificationGroupStatu notificationGroupStatu)
        {
            base.AddObject("NotificationGroupStatus", notificationGroupStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationLists(NotificationList notificationList)
        {
            base.AddObject("NotificationLists", notificationList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationListStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationListStatus(NotificationListStatu notificationListStatu)
        {
            base.AddObject("NotificationListStatus", notificationListStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="databasename">No Metadata Documentation available.</param>
        /// <param name="pathtothedatabase">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> sp_BackUpOfTheDataBase(global::System.String databasename, global::System.String pathtothedatabase)
        {
            ObjectParameter databasenameParameter;
            if (databasename != null)
            {
                databasenameParameter = new ObjectParameter("databasename", databasename);
            }
            else
            {
                databasenameParameter = new ObjectParameter("databasename", typeof(global::System.String));
            }
    
            ObjectParameter pathtothedatabaseParameter;
            if (pathtothedatabase != null)
            {
                pathtothedatabaseParameter = new ObjectParameter("pathtothedatabase", pathtothedatabase);
            }
            else
            {
                pathtothedatabaseParameter = new ObjectParameter("pathtothedatabase", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("sp_BackUpOfTheDataBase", databasenameParameter, pathtothedatabaseParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="changedBy">Initial value of the ChangedBy property.</param>
        public static Appointment CreateAppointment(global::System.Guid id, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Int32 doctorId, global::System.Int32 patientId, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdBy, global::System.Int32 changedBy)
        {
            Appointment appointment = new Appointment();
            appointment.ID = id;
            appointment.StartTime = startTime;
            appointment.EndTime = endTime;
            appointment.DoctorId = doctorId;
            appointment.PatientId = patientId;
            appointment.Created = created;
            appointment.Changed = changed;
            appointment.CreatedBy = createdBy;
            appointment.ChangedBy = changedBy;
            return appointment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Doctor
        {
            get
            {
                return _Doctor;
            }
            set
            {
                OnDoctorChanging(value);
                ReportPropertyChanging("Doctor");
                _Doctor = StructuralObject.SetValidValue(value, true, "Doctor");
                ReportPropertyChanged("Doctor");
                OnDoctorChanged();
            }
        }
        private global::System.String _Doctor;
        partial void OnDoctorChanging(global::System.String value);
        partial void OnDoctorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value, "DoctorId");
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patient
        {
            get
            {
                return _Patient;
            }
            set
            {
                OnPatientChanging(value);
                ReportPropertyChanging("Patient");
                _Patient = StructuralObject.SetValidValue(value, true, "Patient");
                ReportPropertyChanged("Patient");
                OnPatientChanged();
            }
        }
        private global::System.String _Patient;
        partial void OnPatientChanging(global::System.String value);
        partial void OnPatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value, "PatientId");
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value, "Changed");
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedBy
        {
            get
            {
                return _ChangedBy;
            }
            set
            {
                OnChangedByChanging(value);
                ReportPropertyChanging("ChangedBy");
                _ChangedBy = StructuralObject.SetValidValue(value, "ChangedBy");
                ReportPropertyChanged("ChangedBy");
                OnChangedByChanged();
            }
        }
        private global::System.Int32 _ChangedBy;
        partial void OnChangedByChanging(global::System.Int32 value);
        partial void OnChangedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Appointment_Staff", "Staff")]
        public Staff Staff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("dentistModel.FK_Appointment_Staff", "Staff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("dentistModel.FK_Appointment_Staff", "Staff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Staff> StaffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("dentistModel.FK_Appointment_Staff", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Staff>("dentistModel.FK_Appointment_Staff", "Staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Appointment_Patient", "Patient")]
        public Patient Patient1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dentistModel.FK_Appointment_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dentistModel.FK_Appointment_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> Patient1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dentistModel.FK_Appointment_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("dentistModel.FK_Appointment_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="BackupLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BackupLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BackupLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="backupTypesId">Initial value of the BackupTypesId property.</param>
        /// <param name="startDateTime">Initial value of the StartDateTime property.</param>
        /// <param name="endDateTime">Initial value of the EndDateTime property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="startedBy">Initial value of the StartedBy property.</param>
        public static BackupLog CreateBackupLog(global::System.Int32 id, global::System.Int32 backupTypesId, global::System.DateTime startDateTime, global::System.DateTime endDateTime, global::System.String fileName, global::System.String status, global::System.Int32 startedBy)
        {
            BackupLog backupLog = new BackupLog();
            backupLog.Id = id;
            backupLog.BackupTypesId = backupTypesId;
            backupLog.StartDateTime = startDateTime;
            backupLog.EndDateTime = endDateTime;
            backupLog.FileName = fileName;
            backupLog.Status = status;
            backupLog.StartedBy = startedBy;
            return backupLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BackupTypesId
        {
            get
            {
                return _BackupTypesId;
            }
            set
            {
                OnBackupTypesIdChanging(value);
                ReportPropertyChanging("BackupTypesId");
                _BackupTypesId = StructuralObject.SetValidValue(value, "BackupTypesId");
                ReportPropertyChanged("BackupTypesId");
                OnBackupTypesIdChanged();
            }
        }
        private global::System.Int32 _BackupTypesId;
        partial void OnBackupTypesIdChanging(global::System.Int32 value);
        partial void OnBackupTypesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value, "StartDateTime");
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value, "EndDateTime");
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false, "FileName");
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StartedBy
        {
            get
            {
                return _StartedBy;
            }
            set
            {
                OnStartedByChanging(value);
                ReportPropertyChanging("StartedBy");
                _StartedBy = StructuralObject.SetValidValue(value, "StartedBy");
                ReportPropertyChanged("StartedBy");
                OnStartedByChanged();
            }
        }
        private global::System.Int32 _StartedBy;
        partial void OnStartedByChanging(global::System.Int32 value);
        partial void OnStartedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_BackupLogs_BackupTypes", "BackupType")]
        public BackupType BackupType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackupType>("dentistModel.FK_BackupLogs_BackupTypes", "BackupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackupType>("dentistModel.FK_BackupLogs_BackupTypes", "BackupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BackupType> BackupTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackupType>("dentistModel.FK_BackupLogs_BackupTypes", "BackupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BackupType>("dentistModel.FK_BackupLogs_BackupTypes", "BackupType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="BackupType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BackupType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BackupType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static BackupType CreateBackupType(global::System.Int32 id)
        {
            BackupType backupType = new BackupType();
            backupType.ID = id;
            return backupType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _KeyId;
        partial void OnKeyIdChanging(Nullable<global::System.Int32> value);
        partial void OnKeyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_BackupLogs_BackupTypes", "BackupLog")]
        public EntityCollection<BackupLog> BackupLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BackupLog>("dentistModel.FK_BackupLogs_BackupTypes", "BackupLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BackupLog>("dentistModel.FK_BackupLogs_BackupTypes", "BackupLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__BackupTyp__KeyId__30F848ED", "LanguageKey")]
        public LanguageKey LanguageKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__BackupTyp__KeyId__30F848ED", "LanguageKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__BackupTyp__KeyId__30F848ED", "LanguageKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageKey> LanguageKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__BackupTyp__KeyId__30F848ED", "LanguageKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageKey>("dentistModel.FK__BackupTyp__KeyId__30F848ED", "LanguageKey", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Culture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Culture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Culture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Culture CreateCulture(global::System.Int32 id, global::System.String name)
        {
            Culture culture = new Culture();
            culture.ID = id;
            culture.Name = name;
            return culture;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__LanguageD__Cultu__44FF419A", "LanguageData")]
        public EntityCollection<LanguageData> LanguageDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageData>("dentistModel.FK__LanguageD__Cultu__44FF419A", "LanguageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageData>("dentistModel.FK__LanguageD__Cultu__44FF419A", "LanguageData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Education")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Education : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Education object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Education CreateEducation(global::System.Int32 id, global::System.String shortName, global::System.Boolean isDeleted)
        {
            Education education = new Education();
            education.ID = id;
            education.ShortName = shortName;
            education.IsDeleted = isDeleted;
            return education;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false, "ShortName");
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Staff_Education", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("dentistModel.FK_Staff_Education", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("dentistModel.FK_Staff_Education", "Staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="LanguageData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageData object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="cultureId">Initial value of the CultureId property.</param>
        public static LanguageData CreateLanguageData(global::System.Int32 id, global::System.Int32 keyId, global::System.String value, global::System.Int32 cultureId)
        {
            LanguageData languageData = new LanguageData();
            languageData.ID = id;
            languageData.KeyId = keyId;
            languageData.Value = value;
            languageData.CultureId = cultureId;
            return languageData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                OnCultureIdChanging(value);
                ReportPropertyChanging("CultureId");
                _CultureId = StructuralObject.SetValidValue(value, "CultureId");
                ReportPropertyChanged("CultureId");
                OnCultureIdChanged();
            }
        }
        private global::System.Int32 _CultureId;
        partial void OnCultureIdChanging(global::System.Int32 value);
        partial void OnCultureIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__LanguageD__Cultu__44FF419A", "Culture")]
        public Culture Culture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("dentistModel.FK__LanguageD__Cultu__44FF419A", "Culture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("dentistModel.FK__LanguageD__Cultu__44FF419A", "Culture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Culture> CultureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("dentistModel.FK__LanguageD__Cultu__44FF419A", "Culture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Culture>("dentistModel.FK__LanguageD__Cultu__44FF419A", "Culture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__LanguageD__KeyId__440B1D61", "LanguageKey")]
        public LanguageKey LanguageKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__LanguageD__KeyId__440B1D61", "LanguageKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__LanguageD__KeyId__440B1D61", "LanguageKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageKey> LanguageKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__LanguageD__KeyId__440B1D61", "LanguageKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageKey>("dentistModel.FK__LanguageD__KeyId__440B1D61", "LanguageKey", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="LanguageKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageKey object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static LanguageKey CreateLanguageKey(global::System.Int32 id, global::System.String key)
        {
            LanguageKey languageKey = new LanguageKey();
            languageKey.ID = id;
            languageKey.Key = key;
            return languageKey;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__BackupTyp__KeyId__30F848ED", "BackupType")]
        public EntityCollection<BackupType> BackupTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BackupType>("dentistModel.FK__BackupTyp__KeyId__30F848ED", "BackupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BackupType>("dentistModel.FK__BackupTyp__KeyId__30F848ED", "BackupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__LanguageD__KeyId__440B1D61", "LanguageData")]
        public EntityCollection<LanguageData> LanguageDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageData>("dentistModel.FK__LanguageD__KeyId__440B1D61", "LanguageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageData>("dentistModel.FK__LanguageD__KeyId__440B1D61", "LanguageData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__ReminderA__KeyId__3F466844", "ReminderAlert")]
        public EntityCollection<ReminderAlert> ReminderAlerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReminderAlert>("dentistModel.FK__ReminderA__KeyId__3F466844", "ReminderAlert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReminderAlert>("dentistModel.FK__ReminderA__KeyId__3F466844", "ReminderAlert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__ReminderF__KeyId__3A81B327", "ReminderFilter")]
        public EntityCollection<ReminderFilter> ReminderFilters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReminderFilter>("dentistModel.FK__ReminderF__KeyId__3A81B327", "ReminderFilter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReminderFilter>("dentistModel.FK__ReminderF__KeyId__3A81B327", "ReminderFilter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Sexs__KeyId__35BCFE0A", "Sex")]
        public EntityCollection<Sex> Sexs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sex>("dentistModel.FK__Sexs__KeyId__35BCFE0A", "Sex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sex>("dentistModel.FK__Sexs__KeyId__35BCFE0A", "Sex", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Notificat__KeyId__6A30C649", "NotificationGroupStatu")]
        public EntityCollection<NotificationGroupStatu> NotificationGroupStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationGroupStatu>("dentistModel.FK__Notificat__KeyId__6A30C649", "NotificationGroupStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationGroupStatu>("dentistModel.FK__Notificat__KeyId__6A30C649", "NotificationGroupStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Notificat__KeyId__72C60C4A", "NotificationListStatu")]
        public EntityCollection<NotificationListStatu> NotificationListStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationListStatu>("dentistModel.FK__Notificat__KeyId__72C60C4A", "NotificationListStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationListStatu>("dentistModel.FK__Notificat__KeyId__72C60C4A", "NotificationListStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Login")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Login : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Login object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="loginName">Initial value of the LoginName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isCanLogin">Initial value of the IsCanLogin property.</param>
        /// <param name="isHaveToChangePass">Initial value of the IsHaveToChangePass property.</param>
        /// <param name="roleInSystem">Initial value of the RoleInSystem property.</param>
        /// <param name="staffID">Initial value of the StaffID property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="isSA">Initial value of the IsSA property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="changedBy">Initial value of the ChangedBy property.</param>
        public static Login CreateLogin(global::System.Int32 id, global::System.String loginName, global::System.String password, global::System.Boolean isCanLogin, global::System.Boolean isHaveToChangePass, global::System.Int32 roleInSystem, global::System.Int32 staffID, global::System.Boolean isDeleted, global::System.Boolean isSA, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdBy, global::System.Int32 changedBy)
        {
            Login login = new Login();
            login.ID = id;
            login.LoginName = loginName;
            login.Password = password;
            login.IsCanLogin = isCanLogin;
            login.IsHaveToChangePass = isHaveToChangePass;
            login.RoleInSystem = roleInSystem;
            login.StaffID = staffID;
            login.IsDeleted = isDeleted;
            login.IsSA = isSA;
            login.Created = created;
            login.Changed = changed;
            login.CreatedBy = createdBy;
            login.ChangedBy = changedBy;
            return login;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, false, "LoginName");
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCanLogin
        {
            get
            {
                return _IsCanLogin;
            }
            set
            {
                OnIsCanLoginChanging(value);
                ReportPropertyChanging("IsCanLogin");
                _IsCanLogin = StructuralObject.SetValidValue(value, "IsCanLogin");
                ReportPropertyChanged("IsCanLogin");
                OnIsCanLoginChanged();
            }
        }
        private global::System.Boolean _IsCanLogin;
        partial void OnIsCanLoginChanging(global::System.Boolean value);
        partial void OnIsCanLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHaveToChangePass
        {
            get
            {
                return _IsHaveToChangePass;
            }
            set
            {
                OnIsHaveToChangePassChanging(value);
                ReportPropertyChanging("IsHaveToChangePass");
                _IsHaveToChangePass = StructuralObject.SetValidValue(value, "IsHaveToChangePass");
                ReportPropertyChanged("IsHaveToChangePass");
                OnIsHaveToChangePassChanged();
            }
        }
        private global::System.Boolean _IsHaveToChangePass;
        partial void OnIsHaveToChangePassChanging(global::System.Boolean value);
        partial void OnIsHaveToChangePassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleInSystem
        {
            get
            {
                return _RoleInSystem;
            }
            set
            {
                OnRoleInSystemChanging(value);
                ReportPropertyChanging("RoleInSystem");
                _RoleInSystem = StructuralObject.SetValidValue(value, "RoleInSystem");
                ReportPropertyChanged("RoleInSystem");
                OnRoleInSystemChanged();
            }
        }
        private global::System.Int32 _RoleInSystem;
        partial void OnRoleInSystemChanging(global::System.Int32 value);
        partial void OnRoleInSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StaffID
        {
            get
            {
                return _StaffID;
            }
            set
            {
                OnStaffIDChanging(value);
                ReportPropertyChanging("StaffID");
                _StaffID = StructuralObject.SetValidValue(value, "StaffID");
                ReportPropertyChanged("StaffID");
                OnStaffIDChanged();
            }
        }
        private global::System.Int32 _StaffID;
        partial void OnStaffIDChanging(global::System.Int32 value);
        partial void OnStaffIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSA
        {
            get
            {
                return _IsSA;
            }
            set
            {
                OnIsSAChanging(value);
                ReportPropertyChanging("IsSA");
                _IsSA = StructuralObject.SetValidValue(value, "IsSA");
                ReportPropertyChanged("IsSA");
                OnIsSAChanged();
            }
        }
        private global::System.Boolean _IsSA;
        partial void OnIsSAChanging(global::System.Boolean value);
        partial void OnIsSAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value, "Changed");
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedBy
        {
            get
            {
                return _ChangedBy;
            }
            set
            {
                OnChangedByChanging(value);
                ReportPropertyChanging("ChangedBy");
                _ChangedBy = StructuralObject.SetValidValue(value, "ChangedBy");
                ReportPropertyChanged("ChangedBy");
                OnChangedByChanged();
            }
        }
        private global::System.Int32 _ChangedBy;
        partial void OnChangedByChanging(global::System.Int32 value);
        partial void OnChangedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Login_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("dentistModel.FK_Login_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("dentistModel.FK_Login_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("dentistModel.FK_Login_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("dentistModel.FK_Login_Role", "Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="NotificationGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="uniqueId">Initial value of the UniqueId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="templateId">Initial value of the TemplateId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="changedBy">Initial value of the ChangedBy property.</param>
        public static NotificationGroup CreateNotificationGroup(global::System.Int32 id, global::System.Guid uniqueId, global::System.String description, global::System.Int32 templateId, global::System.DateTime startDate, global::System.Int32 status, global::System.Boolean isDeleted, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdBy, global::System.Int32 changedBy)
        {
            NotificationGroup notificationGroup = new NotificationGroup();
            notificationGroup.ID = id;
            notificationGroup.UniqueId = uniqueId;
            notificationGroup.Description = description;
            notificationGroup.TemplateId = templateId;
            notificationGroup.StartDate = startDate;
            notificationGroup.Status = status;
            notificationGroup.IsDeleted = isDeleted;
            notificationGroup.Created = created;
            notificationGroup.Changed = changed;
            notificationGroup.CreatedBy = createdBy;
            notificationGroup.ChangedBy = changedBy;
            return notificationGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value, "UniqueId");
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private global::System.Guid _UniqueId;
        partial void OnUniqueIdChanging(global::System.Guid value);
        partial void OnUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                OnTemplateIdChanging(value);
                ReportPropertyChanging("TemplateId");
                _TemplateId = StructuralObject.SetValidValue(value, "TemplateId");
                ReportPropertyChanged("TemplateId");
                OnTemplateIdChanged();
            }
        }
        private global::System.Int32 _TemplateId;
        partial void OnTemplateIdChanging(global::System.Int32 value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedDate
        {
            get
            {
                return _CompletedDate;
            }
            set
            {
                OnCompletedDateChanging(value);
                ReportPropertyChanging("CompletedDate");
                _CompletedDate = StructuralObject.SetValidValue(value, "CompletedDate");
                ReportPropertyChanged("CompletedDate");
                OnCompletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedDate;
        partial void OnCompletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value, "Changed");
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedBy
        {
            get
            {
                return _ChangedBy;
            }
            set
            {
                OnChangedByChanging(value);
                ReportPropertyChanging("ChangedBy");
                _ChangedBy = StructuralObject.SetValidValue(value, "ChangedBy");
                ReportPropertyChanged("ChangedBy");
                OnChangedByChanged();
            }
        }
        private global::System.Int32 _ChangedBy;
        partial void OnChangedByChanging(global::System.Int32 value);
        partial void OnChangedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Group_Status", "NotificationGroupStatu")]
        public NotificationGroupStatu NotificationGroupStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationGroupStatu>("dentistModel.FK_Group_Status", "NotificationGroupStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationGroupStatu>("dentistModel.FK_Group_Status", "NotificationGroupStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotificationGroupStatu> NotificationGroupStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationGroupStatu>("dentistModel.FK_Group_Status", "NotificationGroupStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotificationGroupStatu>("dentistModel.FK_Group_Status", "NotificationGroupStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Group_TemplateId", "NotificationTemplate")]
        public NotificationTemplate NotificationTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationTemplate>("dentistModel.FK_Group_TemplateId", "NotificationTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationTemplate>("dentistModel.FK_Group_TemplateId", "NotificationTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotificationTemplate> NotificationTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationTemplate>("dentistModel.FK_Group_TemplateId", "NotificationTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotificationTemplate>("dentistModel.FK_Group_TemplateId", "NotificationTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_List_GroupId", "NotificationList")]
        public EntityCollection<NotificationList> NotificationLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationList>("dentistModel.FK_List_GroupId", "NotificationList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationList>("dentistModel.FK_List_GroupId", "NotificationList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="NotificationGroupStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationGroupStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationGroupStatu object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static NotificationGroupStatu CreateNotificationGroupStatu(global::System.Int32 id, global::System.Int32 keyId)
        {
            NotificationGroupStatu notificationGroupStatu = new NotificationGroupStatu();
            notificationGroupStatu.ID = id;
            notificationGroupStatu.KeyId = keyId;
            return notificationGroupStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Notificat__KeyId__6A30C649", "LanguageKey")]
        public LanguageKey LanguageKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__6A30C649", "LanguageKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__6A30C649", "LanguageKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageKey> LanguageKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__6A30C649", "LanguageKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__6A30C649", "LanguageKey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Group_Status", "NotificationGroup")]
        public EntityCollection<NotificationGroup> NotificationGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationGroup>("dentistModel.FK_Group_Status", "NotificationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationGroup>("dentistModel.FK_Group_Status", "NotificationGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="NotificationList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationList object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static NotificationList CreateNotificationList(global::System.Int32 id, global::System.Int32 patientId, global::System.Int32 groupId, global::System.Int32 status)
        {
            NotificationList notificationList = new NotificationList();
            notificationList.ID = id;
            notificationList.PatientId = patientId;
            notificationList.GroupId = groupId;
            notificationList.Status = status;
            return notificationList;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value, "PatientId");
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SendDate
        {
            get
            {
                return _SendDate;
            }
            set
            {
                OnSendDateChanging(value);
                ReportPropertyChanging("SendDate");
                _SendDate = StructuralObject.SetValidValue(value, "SendDate");
                ReportPropertyChanged("SendDate");
                OnSendDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SendDate;
        partial void OnSendDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSendDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorDescription
        {
            get
            {
                return _ErrorDescription;
            }
            set
            {
                OnErrorDescriptionChanging(value);
                ReportPropertyChanging("ErrorDescription");
                _ErrorDescription = StructuralObject.SetValidValue(value, true, "ErrorDescription");
                ReportPropertyChanged("ErrorDescription");
                OnErrorDescriptionChanged();
            }
        }
        private global::System.String _ErrorDescription;
        partial void OnErrorDescriptionChanging(global::System.String value);
        partial void OnErrorDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_List_GroupId", "NotificationGroup")]
        public NotificationGroup NotificationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationGroup>("dentistModel.FK_List_GroupId", "NotificationGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationGroup>("dentistModel.FK_List_GroupId", "NotificationGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotificationGroup> NotificationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationGroup>("dentistModel.FK_List_GroupId", "NotificationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotificationGroup>("dentistModel.FK_List_GroupId", "NotificationGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_List_Status", "NotificationListStatu")]
        public NotificationListStatu NotificationListStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationListStatu>("dentistModel.FK_List_Status", "NotificationListStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationListStatu>("dentistModel.FK_List_Status", "NotificationListStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotificationListStatu> NotificationListStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationListStatu>("dentistModel.FK_List_Status", "NotificationListStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotificationListStatu>("dentistModel.FK_List_Status", "NotificationListStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_List_PatientId", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dentistModel.FK_List_PatientId", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dentistModel.FK_List_PatientId", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dentistModel.FK_List_PatientId", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("dentistModel.FK_List_PatientId", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="NotificationListStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationListStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationListStatu object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static NotificationListStatu CreateNotificationListStatu(global::System.Int32 id, global::System.Int32 keyId)
        {
            NotificationListStatu notificationListStatu = new NotificationListStatu();
            notificationListStatu.ID = id;
            notificationListStatu.KeyId = keyId;
            return notificationListStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Notificat__KeyId__72C60C4A", "LanguageKey")]
        public LanguageKey LanguageKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__72C60C4A", "LanguageKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__72C60C4A", "LanguageKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageKey> LanguageKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__72C60C4A", "LanguageKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageKey>("dentistModel.FK__Notificat__KeyId__72C60C4A", "LanguageKey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_List_Status", "NotificationList")]
        public EntityCollection<NotificationList> NotificationLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationList>("dentistModel.FK_List_Status", "NotificationList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationList>("dentistModel.FK_List_Status", "NotificationList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="NotificationTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="changedBy">Initial value of the ChangedBy property.</param>
        public static NotificationTemplate CreateNotificationTemplate(global::System.Int32 id, global::System.Boolean isDeleted, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdBy, global::System.Int32 changedBy)
        {
            NotificationTemplate notificationTemplate = new NotificationTemplate();
            notificationTemplate.ID = id;
            notificationTemplate.IsDeleted = isDeleted;
            notificationTemplate.Created = created;
            notificationTemplate.Changed = changed;
            notificationTemplate.CreatedBy = createdBy;
            notificationTemplate.ChangedBy = changedBy;
            return notificationTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value, "Changed");
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedBy
        {
            get
            {
                return _ChangedBy;
            }
            set
            {
                OnChangedByChanging(value);
                ReportPropertyChanging("ChangedBy");
                _ChangedBy = StructuralObject.SetValidValue(value, "ChangedBy");
                ReportPropertyChanged("ChangedBy");
                OnChangedByChanged();
            }
        }
        private global::System.Int32 _ChangedBy;
        partial void OnChangedByChanging(global::System.Int32 value);
        partial void OnChangedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Group_TemplateId", "NotificationGroup")]
        public EntityCollection<NotificationGroup> NotificationGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationGroup>("dentistModel.FK_Group_TemplateId", "NotificationGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationGroup>("dentistModel.FK_Group_TemplateId", "NotificationGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="registrationDate">Initial value of the RegistrationDate property.</param>
        /// <param name="surName">Initial value of the SurName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="sex">Initial value of the Sex property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="changedBy">Initial value of the ChangedBy property.</param>
        /// <param name="isEmailNotificationAllowed">Initial value of the IsEmailNotificationAllowed property.</param>
        /// <param name="isEmailChecked">Initial value of the IsEmailChecked property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.Int32 cardNumber, global::System.DateTime registrationDate, global::System.String surName, global::System.String firstName, global::System.Int32 sex, global::System.Boolean isDeleted, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdBy, global::System.Int32 changedBy, global::System.Boolean isEmailNotificationAllowed, global::System.Boolean isEmailChecked)
        {
            Patient patient = new Patient();
            patient.ID = id;
            patient.CardNumber = cardNumber;
            patient.RegistrationDate = registrationDate;
            patient.SurName = surName;
            patient.FirstName = firstName;
            patient.Sex = sex;
            patient.IsDeleted = isDeleted;
            patient.Created = created;
            patient.Changed = changed;
            patient.CreatedBy = createdBy;
            patient.ChangedBy = changedBy;
            patient.IsEmailNotificationAllowed = isEmailNotificationAllowed;
            patient.IsEmailChecked = isEmailChecked;
            return patient;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, "CardNumber");
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.Int32 _CardNumber;
        partial void OnCardNumberChanging(global::System.Int32 value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value, "RegistrationDate");
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private global::System.DateTime _RegistrationDate;
        partial void OnRegistrationDateChanging(global::System.DateTime value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, true, "Job");
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private global::System.String _Job;
        partial void OnJobChanging(global::System.String value);
        partial void OnJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Profession
        {
            get
            {
                return _Profession;
            }
            set
            {
                OnProfessionChanging(value);
                ReportPropertyChanging("Profession");
                _Profession = StructuralObject.SetValidValue(value, true, "Profession");
                ReportPropertyChanged("Profession");
                OnProfessionChanged();
            }
        }
        private global::System.String _Profession;
        partial void OnProfessionChanging(global::System.String value);
        partial void OnProfessionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SurName
        {
            get
            {
                return _SurName;
            }
            set
            {
                OnSurNameChanging(value);
                ReportPropertyChanging("SurName");
                _SurName = StructuralObject.SetValidValue(value, false, "SurName");
                ReportPropertyChanged("SurName");
                OnSurNameChanged();
            }
        }
        private global::System.String _SurName;
        partial void OnSurNameChanging(global::System.String value);
        partial void OnSurNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, "Sex");
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.Int32 _Sex;
        partial void OnSexChanging(global::System.Int32 value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumberHome
        {
            get
            {
                return _PhoneNumberHome;
            }
            set
            {
                OnPhoneNumberHomeChanging(value);
                ReportPropertyChanging("PhoneNumberHome");
                _PhoneNumberHome = StructuralObject.SetValidValue(value, true, "PhoneNumberHome");
                ReportPropertyChanged("PhoneNumberHome");
                OnPhoneNumberHomeChanged();
            }
        }
        private global::System.String _PhoneNumberHome;
        partial void OnPhoneNumberHomeChanging(global::System.String value);
        partial void OnPhoneNumberHomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumberWork
        {
            get
            {
                return _PhoneNumberWork;
            }
            set
            {
                OnPhoneNumberWorkChanging(value);
                ReportPropertyChanging("PhoneNumberWork");
                _PhoneNumberWork = StructuralObject.SetValidValue(value, true, "PhoneNumberWork");
                ReportPropertyChanged("PhoneNumberWork");
                OnPhoneNumberWorkChanged();
            }
        }
        private global::System.String _PhoneNumberWork;
        partial void OnPhoneNumberWorkChanging(global::System.String value);
        partial void OnPhoneNumberWorkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumberCell
        {
            get
            {
                return _PhoneNumberCell;
            }
            set
            {
                OnPhoneNumberCellChanging(value);
                ReportPropertyChanging("PhoneNumberCell");
                _PhoneNumberCell = StructuralObject.SetValidValue(value, true, "PhoneNumberCell");
                ReportPropertyChanged("PhoneNumberCell");
                OnPhoneNumberCellChanged();
            }
        }
        private global::System.String _PhoneNumberCell;
        partial void OnPhoneNumberCellChanging(global::System.String value);
        partial void OnPhoneNumberCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value, "Birthday");
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true, "Comments");
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value, "Changed");
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedBy
        {
            get
            {
                return _ChangedBy;
            }
            set
            {
                OnChangedByChanging(value);
                ReportPropertyChanging("ChangedBy");
                _ChangedBy = StructuralObject.SetValidValue(value, "ChangedBy");
                ReportPropertyChanged("ChangedBy");
                OnChangedByChanged();
            }
        }
        private global::System.Int32 _ChangedBy;
        partial void OnChangedByChanging(global::System.Int32 value);
        partial void OnChangedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEmailNotificationAllowed
        {
            get
            {
                return _IsEmailNotificationAllowed;
            }
            set
            {
                OnIsEmailNotificationAllowedChanging(value);
                ReportPropertyChanging("IsEmailNotificationAllowed");
                _IsEmailNotificationAllowed = StructuralObject.SetValidValue(value, "IsEmailNotificationAllowed");
                ReportPropertyChanged("IsEmailNotificationAllowed");
                OnIsEmailNotificationAllowedChanged();
            }
        }
        private global::System.Boolean _IsEmailNotificationAllowed;
        partial void OnIsEmailNotificationAllowedChanging(global::System.Boolean value);
        partial void OnIsEmailNotificationAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEmailChecked
        {
            get
            {
                return _IsEmailChecked;
            }
            set
            {
                OnIsEmailCheckedChanging(value);
                ReportPropertyChanging("IsEmailChecked");
                _IsEmailChecked = StructuralObject.SetValidValue(value, "IsEmailChecked");
                ReportPropertyChanged("IsEmailChecked");
                OnIsEmailCheckedChanged();
            }
        }
        private global::System.Boolean _IsEmailChecked;
        partial void OnIsEmailCheckedChanging(global::System.Boolean value);
        partial void OnIsEmailCheckedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Appointment_Patient", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("dentistModel.FK_Appointment_Patient", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("dentistModel.FK_Appointment_Patient", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_List_PatientId", "NotificationList")]
        public EntityCollection<NotificationList> NotificationLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationList>("dentistModel.FK_List_PatientId", "NotificationList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationList>("dentistModel.FK_List_PatientId", "NotificationList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Patient_Sex", "Sex")]
        public Sex Sex1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("dentistModel.FK_Patient_Sex", "Sex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("dentistModel.FK_Patient_Sex", "Sex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sex> Sex1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("dentistModel.FK_Patient_Sex", "Sex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sex>("dentistModel.FK_Patient_Sex", "Sex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Position CreatePosition(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted)
        {
            Position position = new Position();
            position.ID = id;
            position.Name = name;
            position.IsDeleted = isDeleted;
            return position;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Staff_Position", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("dentistModel.FK_Staff_Position", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("dentistModel.FK_Staff_Position", "Staff", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Reminder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reminder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reminder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="alertId">Initial value of the AlertId property.</param>
        /// <param name="isCompleted">Initial value of the IsCompleted property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="changedBy">Initial value of the ChangedBy property.</param>
        public static Reminder CreateReminder(global::System.Int32 id, global::System.DateTime date, global::System.Int32 patientId, global::System.Int32 alertId, global::System.Boolean isCompleted, global::System.Boolean isDeleted, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdBy, global::System.Int32 changedBy)
        {
            Reminder reminder = new Reminder();
            reminder.ID = id;
            reminder.Date = date;
            reminder.PatientId = patientId;
            reminder.AlertId = alertId;
            reminder.IsCompleted = isCompleted;
            reminder.IsDeleted = isDeleted;
            reminder.Created = created;
            reminder.Changed = changed;
            reminder.CreatedBy = createdBy;
            reminder.ChangedBy = changedBy;
            return reminder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value, "PatientId");
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value, "DoctorId");
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DoctorId;
        partial void OnDoctorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlertId
        {
            get
            {
                return _AlertId;
            }
            set
            {
                OnAlertIdChanging(value);
                ReportPropertyChanging("AlertId");
                _AlertId = StructuralObject.SetValidValue(value, "AlertId");
                ReportPropertyChanged("AlertId");
                OnAlertIdChanged();
            }
        }
        private global::System.Int32 _AlertId;
        partial void OnAlertIdChanging(global::System.Int32 value);
        partial void OnAlertIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompleted
        {
            get
            {
                return _IsCompleted;
            }
            set
            {
                OnIsCompletedChanging(value);
                ReportPropertyChanging("IsCompleted");
                _IsCompleted = StructuralObject.SetValidValue(value, "IsCompleted");
                ReportPropertyChanged("IsCompleted");
                OnIsCompletedChanged();
            }
        }
        private global::System.Boolean _IsCompleted;
        partial void OnIsCompletedChanging(global::System.Boolean value);
        partial void OnIsCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value, "Changed");
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedBy
        {
            get
            {
                return _ChangedBy;
            }
            set
            {
                OnChangedByChanging(value);
                ReportPropertyChanging("ChangedBy");
                _ChangedBy = StructuralObject.SetValidValue(value, "ChangedBy");
                ReportPropertyChanged("ChangedBy");
                OnChangedByChanged();
            }
        }
        private global::System.Int32 _ChangedBy;
        partial void OnChangedByChanging(global::System.Int32 value);
        partial void OnChangedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Reminder__AlertI__49C3F6B7", "ReminderAlert")]
        public ReminderAlert ReminderAlert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderAlert>("dentistModel.FK__Reminder__AlertI__49C3F6B7", "ReminderAlert").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderAlert>("dentistModel.FK__Reminder__AlertI__49C3F6B7", "ReminderAlert").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReminderAlert> ReminderAlertReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderAlert>("dentistModel.FK__Reminder__AlertI__49C3F6B7", "ReminderAlert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReminderAlert>("dentistModel.FK__Reminder__AlertI__49C3F6B7", "ReminderAlert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="ReminderAlert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReminderAlert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReminderAlert object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="days">Initial value of the Days property.</param>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static ReminderAlert CreateReminderAlert(global::System.Int32 id, global::System.Int32 days, global::System.Int32 keyId)
        {
            ReminderAlert reminderAlert = new ReminderAlert();
            reminderAlert.ID = id;
            reminderAlert.Days = days;
            reminderAlert.KeyId = keyId;
            return reminderAlert;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value, "Days");
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private global::System.Int32 _Days;
        partial void OnDaysChanging(global::System.Int32 value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__ReminderA__KeyId__3F466844", "LanguageKey")]
        public LanguageKey LanguageKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__ReminderA__KeyId__3F466844", "LanguageKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__ReminderA__KeyId__3F466844", "LanguageKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageKey> LanguageKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__ReminderA__KeyId__3F466844", "LanguageKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageKey>("dentistModel.FK__ReminderA__KeyId__3F466844", "LanguageKey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Reminder__AlertI__49C3F6B7", "Reminder")]
        public EntityCollection<Reminder> Reminders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reminder>("dentistModel.FK__Reminder__AlertI__49C3F6B7", "Reminder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reminder>("dentistModel.FK__Reminder__AlertI__49C3F6B7", "Reminder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="ReminderFilter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReminderFilter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReminderFilter object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="keyId">Initial value of the KeyId property.</param>
        public static ReminderFilter CreateReminderFilter(global::System.Int32 id, global::System.Int32 keyId)
        {
            ReminderFilter reminderFilter = new ReminderFilter();
            reminderFilter.ID = id;
            reminderFilter.KeyId = keyId;
            return reminderFilter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private global::System.Int32 _KeyId;
        partial void OnKeyIdChanging(global::System.Int32 value);
        partial void OnKeyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__ReminderF__KeyId__3A81B327", "LanguageKey")]
        public LanguageKey LanguageKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__ReminderF__KeyId__3A81B327", "LanguageKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__ReminderF__KeyId__3A81B327", "LanguageKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageKey> LanguageKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__ReminderF__KeyId__3A81B327", "LanguageKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageKey>("dentistModel.FK__ReminderF__KeyId__3A81B327", "LanguageKey", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.ID = id;
            role.Name = name;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Login_Role", "Login")]
        public EntityCollection<Login> Logins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Login>("dentistModel.FK_Login_Role", "Login");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Login>("dentistModel.FK_Login_Role", "Login", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="nvKey">Initial value of the nvKey property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Setting CreateSetting(global::System.String nvKey, global::System.Int32 id)
        {
            Setting setting = new Setting();
            setting.nvKey = nvKey;
            setting.Id = id;
            return setting;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nvKey
        {
            get
            {
                return _nvKey;
            }
            set
            {
                OnnvKeyChanging(value);
                ReportPropertyChanging("nvKey");
                _nvKey = StructuralObject.SetValidValue(value, false, "nvKey");
                ReportPropertyChanged("nvKey");
                OnnvKeyChanged();
            }
        }
        private global::System.String _nvKey;
        partial void OnnvKeyChanging(global::System.String value);
        partial void OnnvKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nvValue
        {
            get
            {
                return _nvValue;
            }
            set
            {
                OnnvValueChanging(value);
                ReportPropertyChanging("nvValue");
                _nvValue = StructuralObject.SetValidValue(value, true, "nvValue");
                ReportPropertyChanged("nvValue");
                OnnvValueChanged();
            }
        }
        private global::System.String _nvValue;
        partial void OnnvValueChanging(global::System.String value);
        partial void OnnvValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> intValue
        {
            get
            {
                return _intValue;
            }
            set
            {
                OnintValueChanging(value);
                ReportPropertyChanging("intValue");
                _intValue = StructuralObject.SetValidValue(value, "intValue");
                ReportPropertyChanged("intValue");
                OnintValueChanged();
            }
        }
        private Nullable<global::System.Int32> _intValue;
        partial void OnintValueChanging(Nullable<global::System.Int32> value);
        partial void OnintValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> bitValue
        {
            get
            {
                return _bitValue;
            }
            set
            {
                OnbitValueChanging(value);
                ReportPropertyChanging("bitValue");
                _bitValue = StructuralObject.SetValidValue(value, "bitValue");
                ReportPropertyChanged("bitValue");
                OnbitValueChanged();
            }
        }
        private Nullable<global::System.Boolean> _bitValue;
        partial void OnbitValueChanging(Nullable<global::System.Boolean> value);
        partial void OnbitValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Sex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sex object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Sex CreateSex(global::System.Int32 id)
        {
            Sex sex = new Sex();
            sex.ID = id;
            return sex;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeyId
        {
            get
            {
                return _KeyId;
            }
            set
            {
                OnKeyIdChanging(value);
                ReportPropertyChanging("KeyId");
                _KeyId = StructuralObject.SetValidValue(value, "KeyId");
                ReportPropertyChanged("KeyId");
                OnKeyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _KeyId;
        partial void OnKeyIdChanging(Nullable<global::System.Int32> value);
        partial void OnKeyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK__Sexs__KeyId__35BCFE0A", "LanguageKey")]
        public LanguageKey LanguageKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Sexs__KeyId__35BCFE0A", "LanguageKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Sexs__KeyId__35BCFE0A", "LanguageKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageKey> LanguageKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageKey>("dentistModel.FK__Sexs__KeyId__35BCFE0A", "LanguageKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageKey>("dentistModel.FK__Sexs__KeyId__35BCFE0A", "LanguageKey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Staff_Sex", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("dentistModel.FK_Staff_Sex", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("dentistModel.FK_Staff_Sex", "Staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Patient_Sex", "Patient")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("dentistModel.FK_Patient_Sex", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("dentistModel.FK_Patient_Sex", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="Staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Staff object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="educationID">Initial value of the EducationID property.</param>
        /// <param name="positionID">Initial value of the PositionID property.</param>
        /// <param name="surName">Initial value of the SurName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="sex">Initial value of the Sex property.</param>
        /// <param name="isTaking">Initial value of the IsTaking property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="changedBy">Initial value of the ChangedBy property.</param>
        public static Staff CreateStaff(global::System.Int32 id, global::System.Int32 educationID, global::System.Int32 positionID, global::System.String surName, global::System.String firstName, global::System.Int32 sex, global::System.Boolean isTaking, global::System.Boolean isDeleted, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdBy, global::System.Int32 changedBy)
        {
            Staff staff = new Staff();
            staff.ID = id;
            staff.EducationID = educationID;
            staff.PositionID = positionID;
            staff.SurName = surName;
            staff.FirstName = firstName;
            staff.Sex = sex;
            staff.IsTaking = isTaking;
            staff.IsDeleted = isDeleted;
            staff.Created = created;
            staff.Changed = changed;
            staff.CreatedBy = createdBy;
            staff.ChangedBy = changedBy;
            return staff;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationID
        {
            get
            {
                return _EducationID;
            }
            set
            {
                OnEducationIDChanging(value);
                ReportPropertyChanging("EducationID");
                _EducationID = StructuralObject.SetValidValue(value, "EducationID");
                ReportPropertyChanged("EducationID");
                OnEducationIDChanged();
            }
        }
        private global::System.Int32 _EducationID;
        partial void OnEducationIDChanging(global::System.Int32 value);
        partial void OnEducationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                OnPositionIDChanging(value);
                ReportPropertyChanging("PositionID");
                _PositionID = StructuralObject.SetValidValue(value, "PositionID");
                ReportPropertyChanged("PositionID");
                OnPositionIDChanged();
            }
        }
        private global::System.Int32 _PositionID;
        partial void OnPositionIDChanging(global::System.Int32 value);
        partial void OnPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SurName
        {
            get
            {
                return _SurName;
            }
            set
            {
                OnSurNameChanging(value);
                ReportPropertyChanging("SurName");
                _SurName = StructuralObject.SetValidValue(value, false, "SurName");
                ReportPropertyChanged("SurName");
                OnSurNameChanged();
            }
        }
        private global::System.String _SurName;
        partial void OnSurNameChanging(global::System.String value);
        partial void OnSurNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, "Sex");
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.Int32 _Sex;
        partial void OnSexChanging(global::System.Int32 value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumberHome
        {
            get
            {
                return _PhoneNumberHome;
            }
            set
            {
                OnPhoneNumberHomeChanging(value);
                ReportPropertyChanging("PhoneNumberHome");
                _PhoneNumberHome = StructuralObject.SetValidValue(value, true, "PhoneNumberHome");
                ReportPropertyChanged("PhoneNumberHome");
                OnPhoneNumberHomeChanged();
            }
        }
        private global::System.String _PhoneNumberHome;
        partial void OnPhoneNumberHomeChanging(global::System.String value);
        partial void OnPhoneNumberHomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumberWork
        {
            get
            {
                return _PhoneNumberWork;
            }
            set
            {
                OnPhoneNumberWorkChanging(value);
                ReportPropertyChanging("PhoneNumberWork");
                _PhoneNumberWork = StructuralObject.SetValidValue(value, true, "PhoneNumberWork");
                ReportPropertyChanged("PhoneNumberWork");
                OnPhoneNumberWorkChanged();
            }
        }
        private global::System.String _PhoneNumberWork;
        partial void OnPhoneNumberWorkChanging(global::System.String value);
        partial void OnPhoneNumberWorkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumberCell
        {
            get
            {
                return _PhoneNumberCell;
            }
            set
            {
                OnPhoneNumberCellChanging(value);
                ReportPropertyChanging("PhoneNumberCell");
                _PhoneNumberCell = StructuralObject.SetValidValue(value, true, "PhoneNumberCell");
                ReportPropertyChanged("PhoneNumberCell");
                OnPhoneNumberCellChanged();
            }
        }
        private global::System.String _PhoneNumberCell;
        partial void OnPhoneNumberCellChanging(global::System.String value);
        partial void OnPhoneNumberCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value, "Birthday");
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTaking
        {
            get
            {
                return _IsTaking;
            }
            set
            {
                OnIsTakingChanging(value);
                ReportPropertyChanging("IsTaking");
                _IsTaking = StructuralObject.SetValidValue(value, "IsTaking");
                ReportPropertyChanged("IsTaking");
                OnIsTakingChanged();
            }
        }
        private global::System.Boolean _IsTaking;
        partial void OnIsTakingChanging(global::System.Boolean value);
        partial void OnIsTakingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true, "Comments");
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value, "Changed");
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedBy
        {
            get
            {
                return _ChangedBy;
            }
            set
            {
                OnChangedByChanging(value);
                ReportPropertyChanging("ChangedBy");
                _ChangedBy = StructuralObject.SetValidValue(value, "ChangedBy");
                ReportPropertyChanged("ChangedBy");
                OnChangedByChanged();
            }
        }
        private global::System.Int32 _ChangedBy;
        partial void OnChangedByChanging(global::System.Int32 value);
        partial void OnChangedByChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Appointment_Staff", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("dentistModel.FK_Appointment_Staff", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("dentistModel.FK_Appointment_Staff", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Staff_Education", "Education")]
        public Education Education
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Education>("dentistModel.FK_Staff_Education", "Education").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Education>("dentistModel.FK_Staff_Education", "Education").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Education> EducationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Education>("dentistModel.FK_Staff_Education", "Education");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Education>("dentistModel.FK_Staff_Education", "Education", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Staff_Position", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("dentistModel.FK_Staff_Position", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("dentistModel.FK_Staff_Position", "Position").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("dentistModel.FK_Staff_Position", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("dentistModel.FK_Staff_Position", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dentistModel", "FK_Staff_Sex", "Sex")]
        public Sex Sex1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("dentistModel.FK_Staff_Sex", "Sex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("dentistModel.FK_Staff_Sex", "Sex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sex> Sex1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("dentistModel.FK_Staff_Sex", "Sex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sex>("dentistModel.FK_Staff_Sex", "Sex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dentistModel", Name="SystemUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemUpdate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="updateVersion">Initial value of the UpdateVersion property.</param>
        /// <param name="updateVersionInt">Initial value of the UpdateVersionInt property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static SystemUpdate CreateSystemUpdate(global::System.Int32 id, global::System.String updateVersion, global::System.Int32 updateVersionInt, global::System.DateTime updateDate)
        {
            SystemUpdate systemUpdate = new SystemUpdate();
            systemUpdate.ID = id;
            systemUpdate.UpdateVersion = updateVersion;
            systemUpdate.UpdateVersionInt = updateVersionInt;
            systemUpdate.UpdateDate = updateDate;
            return systemUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateInformation
        {
            get
            {
                return _UpdateInformation;
            }
            set
            {
                OnUpdateInformationChanging(value);
                ReportPropertyChanging("UpdateInformation");
                _UpdateInformation = StructuralObject.SetValidValue(value, true, "UpdateInformation");
                ReportPropertyChanged("UpdateInformation");
                OnUpdateInformationChanged();
            }
        }
        private global::System.String _UpdateInformation;
        partial void OnUpdateInformationChanging(global::System.String value);
        partial void OnUpdateInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateVersion
        {
            get
            {
                return _UpdateVersion;
            }
            set
            {
                OnUpdateVersionChanging(value);
                ReportPropertyChanging("UpdateVersion");
                _UpdateVersion = StructuralObject.SetValidValue(value, false, "UpdateVersion");
                ReportPropertyChanged("UpdateVersion");
                OnUpdateVersionChanged();
            }
        }
        private global::System.String _UpdateVersion;
        partial void OnUpdateVersionChanging(global::System.String value);
        partial void OnUpdateVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdateVersionInt
        {
            get
            {
                return _UpdateVersionInt;
            }
            set
            {
                OnUpdateVersionIntChanging(value);
                ReportPropertyChanging("UpdateVersionInt");
                _UpdateVersionInt = StructuralObject.SetValidValue(value, "UpdateVersionInt");
                ReportPropertyChanged("UpdateVersionInt");
                OnUpdateVersionIntChanged();
            }
        }
        private global::System.Int32 _UpdateVersionInt;
        partial void OnUpdateVersionIntChanging(global::System.Int32 value);
        partial void OnUpdateVersionIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

    }

    #endregion

}
